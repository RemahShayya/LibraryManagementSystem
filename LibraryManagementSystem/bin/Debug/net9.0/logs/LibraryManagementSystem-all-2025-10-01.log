2025-10-01 14:56:11.2831|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 14:56:11.7945|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 14:56:13.5357|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 14:56:13.6593|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 14:56:13.7156|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 14:56:13.7347|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 14:56:13.7818|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 14:56:13.8237|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 14:56:13.8237|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 14:56:13.8528|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 14:56:13.8579|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 14:56:13.8579|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 14:56:13.8579|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 14:56:13.8694|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 14:56:13.8694|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 14:56:13.8694|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 14:56:13.8694|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 14:56:13.8694|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 14:56:13.8859|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 14:56:13.8859|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 14:56:14.0006|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 14:56:14.0006|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 14:56:14.0257|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 14:56:14.2696|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 14:56:14.2803|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 14:56:14.2803|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 14:56:14.2803|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 14:56:14.2803|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 14:56:14.2803|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 14:56:14.2932|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 14:56:14.2932|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 14:56:14.3673|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 14:56:14.3673|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 14:56:14.3673|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 14:56:14.3673|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 14:57:15.9721|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NM" accepted. 
2025-10-01 14:57:15.9813|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NM" started. 
2025-10-01 14:57:16.0793|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0S6L6E3NM established using the following protocol: Tls13 
2025-10-01 14:57:16.1148|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 14:57:16.1148|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 14:57:16.1199|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 14:57:16.1199|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 14:57:16.1199|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 14:57:16.1199|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 1 with length 538 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:16.1438|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 14:57:16.1657|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 14:57:16.3628|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:16.4423|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 14:57:16.4423|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 14:57:16.4423|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 14:57:16.4423|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:16.5888|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:16.5888|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 14:57:16.6737|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 14:57:16.6737|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 14:57:16.6737|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 14:57:16.6737|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 14:57:16.6841|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 14:57:16.6841|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 14:57:16.6841|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 14:57:16.6841|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 14:57:16.6841|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 14:57:16.6841|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 14:57:16.6841|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 3 with length 109 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:16.6841|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 5 with length 54 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:16.6841|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 7 with length 75 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:16.6841|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 14:57:16.6841|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 14:57:16.6841|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:16.7240|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 14:57:16.7240|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 14:57:16.7240|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:16.7240|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 14:57:16.7240|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.7240|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 14:57:16.7240|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.7240|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.7240|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.7240|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 14:57:16.7240|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:16.7240|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:16.7661|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:16.7661|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:16.7661|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 14:57:16.7661|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.7661|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 14:57:16.7661|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 610.9702ms 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 3 with length 90 and flags END_HEADERS. 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 14:57:16.8227|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 14:57:16.8227|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 132.7053ms 
2025-10-01 14:57:16.8227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 9 with length 60 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:16.8227|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 14:57:16.8227|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 14:57:16.8227|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 14:57:16.8227|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 14:57:16.8227|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 5 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 14:57:16.8227|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 137.2196ms 
2025-10-01 14:57:16.8227|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 137.8696ms 
2025-10-01 14:57:16.8227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 14:57:16.8983|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 14:57:16.8983|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 14:57:16.9015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 14:57:16.9015|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 73.9859ms 
2025-10-01 14:57:17.2040|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:17.2040|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 14:57:17.2040|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:17.2040|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 14:57:17.2040|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 14:57:17.2040|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.2040|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:17.2040|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:17.2040|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 11 with length 9307 and flags NONE. 
2025-10-01 14:57:17.4058|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:17.4058|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.4058|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 14:57:17.4058|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:17.4058|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 14:57:17.4058|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 14:57:17.4058|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.4058|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:17.4058|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:17.4058|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.4058|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 14:57:17.4058|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 206.1846ms 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 13 with length 9307 and flags NONE. 
2025-10-01 14:57:17.4443|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 14:57:17.4443|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 14:57:17.4443|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 36.2637ms 
2025-10-01 14:57:17.9528|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" received HEADERS frame for stream ID 15 with length 88 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 14:57:17.9528|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/favicon.ico - - - 
2025-10-01 14:57:17.9528|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:17.9528|1000|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|No candidates found for the request path '/favicon.ico' 
2025-10-01 14:57:17.9528|2|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request did not match any endpoints 
2025-10-01 14:57:17.9528|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:17.9528|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/favicon.ico - 404 0 - 2.2868ms 
2025-10-01 14:57:17.9528|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" sending HEADERS frame for stream ID 15 with length 37 and flags END_STREAM, END_HEADERS. 
2025-10-01 14:57:17.9528|16|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7143/favicon.ico, Response status code: 404 
2025-10-01 14:57:25.7959|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0S6L6E3NM" received FIN. 
2025-10-01 14:57:25.7959|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NM" is closed. The last processed stream ID was 15. 
2025-10-01 14:57:25.7959|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0S6L6E3NM" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 14:57:25.8079|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0S6L6E3NM completed. 
2025-10-01 14:57:25.8079|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NM" stopped. 
2025-10-01 14:57:47.2427|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NN" accepted. 
2025-10-01 14:57:47.2510|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NN" started. 
2025-10-01 14:57:47.3216|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0S6L6E3NN established using the following protocol: Tls13 
2025-10-01 14:57:47.3216|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 14:57:47.3216|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 14:57:47.3216|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 14:57:47.3225|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 14:57:47.3225|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 14:57:47.3225|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received HEADERS frame for stream ID 1 with length 436 and flags END_HEADERS, PRIORITY. 
2025-10-01 14:57:47.3225|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received DATA frame for stream ID 1 with length 67 and flags END_STREAM. 
2025-10-01 14:57:47.3225|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7143/api/Account/Login - application/json 67 
2025-10-01 14:57:47.3225|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 14:57:47.3225|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:47.3225|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Account/Login' 
2025-10-01 14:57:47.3225|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' with route pattern 'api/Account/Login' is valid for the request path '/api/Account/Login' 
2025-10-01 14:57:47.3225|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:47.3225|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:47.3225|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:47.3225|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:47.4016|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[LibraryManagementSystem.Data.DTO.UserDTO]] login(LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest) on controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API). 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 14:57:47.4016|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API) 
2025-10-01 14:57:47.6105|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 14:57:47.7056|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API) 
2025-10-01 14:57:47.7056|22|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' ... 
2025-10-01 14:57:47.7056|44|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' using the name '' in request data ... 
2025-10-01 14:57:47.7056|1|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'. 
2025-10-01 14:57:47.7189|25|DEBUG|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HNG0S6L6E3NN", Request id "0HNG0S6L6E3NN:00000001": started reading request body. 
2025-10-01 14:57:47.7189|26|DEBUG|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HNG0S6L6E3NN", Request id "0HNG0S6L6E3NN:00000001": done reading request body. 
2025-10-01 14:57:47.7189|2|DEBUG|Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter|JSON input formatter succeeded, deserializing to type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' 
2025-10-01 14:57:47.7189|45|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Done attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:47.7295|23|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:47.7295|26|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to validate the bound parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' ... 
2025-10-01 14:57:47.7295|27|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to validate the bound parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:47.7295|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:47.7295|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:47.7295|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:47.7295|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:47.7535|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 14:57:47.7535|102|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) with arguments (LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest) 
2025-10-01 14:57:48.5161|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 14:57:48.5161|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 14:57:48.5161|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 14:57:48.8493|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 14:57:48.9608|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 14:57:49.0893|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<User>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)' 
2025-10-01 14:57:49.5661|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.DateCreated (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FirstName (string) Required, 6], [Property: User.LastName (string) Required, 7], [Property: User.LockoutEnabled (bool) Required, 8], [Property: User.LockoutEnd (DateTimeOffset?), 9], [Property: User.NormalizedEmail (string) Index MaxLength(256), 10], [Property: User.NormalizedUserName (string) Index MaxLength(256), 11], [Property: User.PasswordHash (string), 12], [Property: User.PhoneNumber (string), 13], [Property: User.PhoneNumberConfirmed (bool) Required, 14], [Property: User.SecurityStamp (string), 15], [Property: User.TwoFactorEnabled (bool) Required, 16], [Property: User.UserName (string) MaxLength(256), 17] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.DateCreated (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FirstName (string) Required, 6], [Property: User.LastName (string) Required, 7], [Property: User.LockoutEnabled (bool) Required, 8], [Property: User.LockoutEnd (DateTimeOffset?), 9], [Property: User.NormalizedEmail (string) Index MaxLength(256), 10], [Property: User.NormalizedUserName (string) Index MaxLength(256), 11], [Property: User.PasswordHash (string), 12], [Property: User.PhoneNumber (string), 13], [Property: User.PhoneNumberConfirmed (bool) Required, 14], [Property: User.SecurityStamp (string), 15], [Property: User.TwoFactorEnabled (bool) Required, 16], [Property: User.UserName (string) MaxLength(256), 17] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<DateCreated>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(6);
                                    instance.<LastName>k__BackingField = dataReader.GetString(7);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(9) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(9);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(14);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(16);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: LibraryManagmentSystem.Data.LibraryContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)' 
2025-10-01 14:57:49.6427|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 14:57:49.6651|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (22ms). 
2025-10-01 14:57:49.6701|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:50.0730|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:50.0730|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 14:57:50.0730|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 14:57:50.1027|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (25ms). 
2025-10-01 14:57:50.1156|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0 
2025-10-01 14:57:50.3365|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (221ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0 
2025-10-01 14:57:50.3513|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:50.3631|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 17ms reading results. 
2025-10-01 14:57:50.3631|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:50.3787|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (10ms). 
2025-10-01 14:57:50.3887|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 2627.1397ms. 
2025-10-01 14:57:50.3887|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:50.3887|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:50.3887|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:50.3887|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:50.3887|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:50.3887|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:50.3887|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult. 
2025-10-01 14:57:50.3887|11|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|List of registered output formatters, in the following order: Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter 
2025-10-01 14:57:50.3887|4|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|No information found on request to perform content negotiation. 
2025-10-01 14:57:50.4006|8|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Attempting to select an output formatter without using a content type as no explicit content types were specified for the response. 
2025-10-01 14:57:50.4006|10|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Attempting to select the first formatter in the output formatters list which can write the result. 
2025-10-01 14:57:50.4006|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response. 
2025-10-01 14:57:50.4006|1|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing UnauthorizedObjectResult, writing value of type 'System.String'. 
2025-10-01 14:57:50.4006|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult. 
2025-10-01 14:57:50.4006|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:50.4006|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:50.4006|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending HEADERS frame for stream ID 1 with length 72 and flags END_HEADERS. 
2025-10-01 14:57:50.4006|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending DATA frame for stream ID 1 with length 28 and flags NONE. 
2025-10-01 14:57:50.4006|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) in 3001.9471ms 
2025-10-01 14:57:50.4006|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:50.4006|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 14:57:50.4179|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 14:57:50.4179|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:50.4179|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (1ms). 
2025-10-01 14:57:50.4179|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7143/api/Account/Login - 401 - text/plain;+charset=utf-8 3098.8208ms 
2025-10-01 14:57:55.0014|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received HEADERS frame for stream ID 3 with length 42 and flags END_HEADERS, PRIORITY. 
2025-10-01 14:57:55.0014|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received DATA frame for stream ID 3 with length 66 and flags END_STREAM. 
2025-10-01 14:57:55.0014|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7143/api/Account/Login - application/json 66 
2025-10-01 14:57:55.0014|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 14:57:55.0014|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Account/Login' 
2025-10-01 14:57:55.0014|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' with route pattern 'api/Account/Login' is valid for the request path '/api/Account/Login' 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:55.0014|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 14:57:55.0014|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 14:57:55.0014|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:55.0014|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[LibraryManagementSystem.Data.DTO.UserDTO]] login(LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest) on controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API). 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 14:57:55.0014|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API) 
2025-10-01 14:57:55.0014|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.AccountController (LibraryManagementSystem.API) 
2025-10-01 14:57:55.0499|22|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' ... 
2025-10-01 14:57:55.0499|44|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' using the name '' in request data ... 
2025-10-01 14:57:55.0499|1|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'. 
2025-10-01 14:57:55.0499|25|DEBUG|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HNG0S6L6E3NN", Request id "0HNG0S6L6E3NN:00000003": started reading request body. 
2025-10-01 14:57:55.0499|26|DEBUG|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HNG0S6L6E3NN", Request id "0HNG0S6L6E3NN:00000003": done reading request body. 
2025-10-01 14:57:55.0499|2|DEBUG|Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter|JSON input formatter succeeded, deserializing to type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' 
2025-10-01 14:57:55.0499|45|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder|Done attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:55.0499|23|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to bind parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:55.0499|26|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to validate the bound parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest' ... 
2025-10-01 14:57:55.0499|27|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to validate the bound parameter 'request' of type 'LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest'. 
2025-10-01 14:57:55.0499|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:55.0499|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:55.0499|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:55.0499|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:55.0499|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 14:57:55.0499|102|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) with arguments (LibraryManagementSystem.API.DTO.Requests.CreateLoginRequest) 
2025-10-01 14:57:55.1336|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 14:57:55.1484|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 14:57:55.1484|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (0ms). 
2025-10-01 14:57:55.1484|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.1617|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.1617|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 14:57:55.1617|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 14:57:55.1617|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 14:57:55.1617|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0 
2025-10-01 14:57:55.1759|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0 
2025-10-01 14:57:55.2312|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 14:57:55.3040|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.3040|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 128ms reading results. 
2025-10-01 14:57:55.3040|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.3040|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 14:57:55.4612|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<Role>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)' 
2025-10-01 14:57:55.5089|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 14:57:55.5108|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.5480|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.5480|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 14:57:55.5480|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 14:57:55.5480|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 14:57:55.5480|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0 
2025-10-01 14:57:55.5733|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0 
2025-10-01 14:57:55.5733|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.5733|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 1ms reading results. 
2025-10-01 14:57:55.5733|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.5733|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 14:57:55.6389|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 587.8936ms. 
2025-10-01 14:57:55.6389|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:55.6389|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 14:57:55.6389|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:55.6389|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 14:57:55.6389|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:55.6389|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:55.6389|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.ObjectResult. 
2025-10-01 14:57:55.6389|11|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|List of registered output formatters, in the following order: Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter, Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter 
2025-10-01 14:57:55.6389|4|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|No information found on request to perform content negotiation. 
2025-10-01 14:57:55.6389|8|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Attempting to select an output formatter without using a content type as no explicit content types were specified for the response. 
2025-10-01 14:57:55.6389|10|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Attempting to select the first formatter in the output formatters list which can write the result. 
2025-10-01 14:57:55.6389|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector|Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response. 
2025-10-01 14:57:55.6389|1|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing ObjectResult, writing value of type 'LibraryManagementSystem.Data.DTO.UserDTO'. 
2025-10-01 14:57:55.6389|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.ObjectResult. 
2025-10-01 14:57:55.6389|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending HEADERS frame for stream ID 3 with length 66 and flags END_HEADERS. 
2025-10-01 14:57:55.6389|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:55.6389|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending DATA frame for stream ID 3 with length 469 and flags NONE. 
2025-10-01 14:57:55.6389|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 14:57:55.6389|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API) in 639.1542ms 
2025-10-01 14:57:55.6389|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.AccountController.login (LibraryManagementSystem.API)' 
2025-10-01 14:57:55.6389|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 14:57:55.6389|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 14:57:55.6389|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 14:57:55.6389|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (0ms). 
2025-10-01 14:57:55.6389|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7143/api/Account/Login - 200 - application/json;+charset=utf-8 643.9464ms 
2025-10-01 14:57:55.6389|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 14:58:00.8449|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0S6L6E3NN" received FIN. 
2025-10-01 14:58:00.8449|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NN" is closed. The last processed stream ID was 3. 
2025-10-01 14:58:00.8449|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0S6L6E3NN" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 14:58:00.8449|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0S6L6E3NN completed. 
2025-10-01 14:58:00.8449|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NN" stopped. 
2025-10-01 15:00:15.1002|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NO" accepted. 
2025-10-01 15:00:15.1002|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0S6L6E3NO" started. 
2025-10-01 15:00:15.1780|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0S6L6E3NO established using the following protocol: Tls13 
2025-10-01 15:00:15.1780|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:00:15.1780|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:00:15.1780|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:00:15.1780|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:00:15.1780|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:00:15.1780|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received HEADERS frame for stream ID 1 with length 401 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:00:15.1780|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:00:15.1780|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals - - - 
2025-10-01 15:00:15.1780|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:00:15.1899|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals' 
2025-10-01 15:00:15.1899|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals' is valid for the request path '/api/Reports/export-rentals' 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API)' 
2025-10-01 15:00:15.1899|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:00:15.1899|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:00:15.1899|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API)' 
2025-10-01 15:00:15.1899|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentals", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentals(LibraryManagementSystem.API.Services.ExcelExportService) on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:00:15.1899|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:00:15.2013|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:00:15.2013|22|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to bind parameter 'excelExportService' of type 'LibraryManagementSystem.API.Services.ExcelExportService' ... 
2025-10-01 15:00:15.2013|23|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to bind parameter 'excelExportService' of type 'LibraryManagementSystem.API.Services.ExcelExportService'. 
2025-10-01 15:00:15.2013|26|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Attempting to validate the bound parameter 'excelExportService' of type 'LibraryManagementSystem.API.Services.ExcelExportService' ... 
2025-10-01 15:00:15.2013|27|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder|Done attempting to validate the bound parameter 'excelExportService' of type 'LibraryManagementSystem.API.Services.ExcelExportService'. 
2025-10-01 15:00:15.2013|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:00:15.2013|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:00:15.2013|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:00:15.2013|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:00:15.2013|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:00:15.2013|102|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API) with arguments (LibraryManagementSystem.API.Services.ExcelExportService) 
2025-10-01 15:00:15.2194|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:00:15.2194|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:00:15.2401|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:00:15.2401|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:00:15.2830|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:00:15.2830|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:00:15.2830|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (0ms). 
2025-10-01 15:00:15.2830|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.3014|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.3014|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:00:15.3014|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:00:15.3014|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:00:15.3014|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:00:15.3286|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:00:15.3395|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.3760|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.3760|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4079|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4079|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4473|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4473|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4473|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.4478|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.4478|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 119ms reading results. 
2025-10-01 15:00:15.4478|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.4478|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:00:15.4478|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:00:15.4478|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:00:15.4478|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:00:15.4684|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:00:15.4684|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.4894|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.4894|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:00:15.4894|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:00:15.4894|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:00:15.4894|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:00:15.5064|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:00:15.5162|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5162|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:00:15.5303|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.5303|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 24ms reading results. 
2025-10-01 15:00:15.5303|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:15.5303|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:00:20.2138|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 5010.8689ms. 
2025-10-01 15:00:20.2143|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:00:20.2143|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:00:20.2143|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:00:20.2143|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:00:20.2143|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:00:20.2143|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:00:20.2143|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 15:00:20.2143|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentals_20251001120020.xlsx' ... 
2025-10-01 15:00:20.2143|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 15:00:20.2349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending HEADERS frame for stream ID 1 with length 239 and flags END_HEADERS. 
2025-10-01 15:00:20.2349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending DATA frame for stream ID 1 with length 7360 and flags NONE. 
2025-10-01 15:00:20.2674|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:00:20.2674|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 15:00:20.2674|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 15:00:20.2674|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:00:20.2674|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:00:20.2674|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API) in 5075.4761ms 
2025-10-01 15:00:20.2674|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentals (LibraryManagementSystem.API)' 
2025-10-01 15:00:20.2674|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 15:00:20.2674|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0S6L6E3NO" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 15:00:20.2674|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:00:20.2674|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (0ms). 
2025-10-01 15:00:20.2674|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals - 200 7360 application/vnd.openxmlformats-officedocument.spreadsheetml.sheet 5093.1226ms 
2025-10-01 15:25:34.6866|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:25:35.5638|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:25:36.5149|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:25:36.6210|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:25:36.6752|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:25:36.6934|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:25:36.7114|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:25:36.7210|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:25:36.7309|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:25:36.7309|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:25:36.7485|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:25:36.7485|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:25:36.7485|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:25:36.7485|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:25:36.7619|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:25:36.7619|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:25:36.7619|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:25:36.7774|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:25:36.7774|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:25:36.7774|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:25:36.9033|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:25:36.9033|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:25:36.9451|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:25:37.2876|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:25:37.2998|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:25:37.2998|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:25:37.2998|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:25:37.2998|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:25:37.2998|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:25:37.2998|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC3" accepted. 
2025-10-01 15:25:37.2998|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC3" started. 
2025-10-01 15:25:37.3212|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:25:37.3234|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:25:37.3529|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC4" accepted. 
2025-10-01 15:25:37.3587|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC4" started. 
2025-10-01 15:25:37.4258|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0SMG7JEC4 established using the following protocol: Tls13 
2025-10-01 15:25:37.4258|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0SMG7JEC3 established using the following protocol: Tls13 
2025-10-01 15:25:37.4711|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:25:37.4711|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:25:37.4711|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:25:37.4711|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:25:37.4711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:25:37.4865|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:25:37.4865|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:25:37.4865|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:25:37.4865|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:25:37.4865|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:37.5061|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:25:37.5373|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 15:25:37.6794|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:37.7565|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 15:25:37.7565|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 15:25:37.7565|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:25:37.7614|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:37.8792|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:37.8792|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:25:37.9497|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 15:25:37.9497|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 15:25:37.9497|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 15:25:37.9497|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 15:25:37.9497|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 15:25:37.9497|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 15:25:37.9497|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 15:25:37.9497|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:25:37.9497|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 15:25:37.9497|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 15:25:37.9654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 15:25:37.9654|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 442.2177ms 
2025-10-01 15:25:37.9897|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 3 with length 96 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:37.9897|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:37.9897|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:37.9897|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 15:25:37.9897|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 15:25:37.9897|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 15:25:37.9897|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:37.9897|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:37.9897|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:37.9897|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 15:25:37.9897|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:37.9897|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:25:37.9897|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:37.9897|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:25:37.9897|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:25:37.9897|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:37.9897|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:37.9897|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:37.9897|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:37.9897|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:37.9944|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:37.9944|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:25:38.0240|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 15:25:38.0240|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 15:25:38.0240|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 15:25:38.0262|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 15:25:38.0262|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 15:25:38.0262|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 34.8197ms 
2025-10-01 15:25:38.0262|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:38.0262|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 15:25:38.0262|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:25:38.0262|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:25:38.0262|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:25:38.0262|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:25:38.0262|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 38.1469ms 
2025-10-01 15:25:38.0262|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 38.3489ms 
2025-10-01 15:25:38.0262|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:25:38.0262|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 9 with length 149 and flags END_HEADERS. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 15:25:38.0733|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 57.6867ms 
2025-10-01 15:25:38.0733|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 15:25:38.5670|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:38.5670|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 15:25:38.5670|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:38.5670|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 15:25:38.5670|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 15:25:38.5670|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.5670|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:38.5736|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:38.5736|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.8344|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 15:25:38.8344|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8344|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8344|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8344|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 15:25:38.8344|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:38.8344|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 15:25:38.8344|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:38.8344|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 15:25:38.8344|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 15:25:38.8344|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.8344|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:38.8344|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:38.8344|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.8344|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.8409|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 15:25:38.8409|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 273.1951ms 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 15:25:38.8818|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:25:38.8818|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 15:25:38.8818|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 45.3984ms 
2025-10-01 15:25:43.5956|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC4" received FIN. 
2025-10-01 15:25:43.5956|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC3" received FIN. 
2025-10-01 15:25:43.6364|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0SMG7JEC4 completed. 
2025-10-01 15:25:43.6364|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0SMG7JEC3 completed. 
2025-10-01 15:25:43.6364|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC4" is closed. The last processed stream ID was 0. 
2025-10-01 15:25:43.6364|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC3" is closed. The last processed stream ID was 13. 
2025-10-01 15:25:43.6364|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC3" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 15:25:43.6364|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC4" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 15:25:43.6364|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC4" stopped. 
2025-10-01 15:25:43.6364|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC3" stopped. 
2025-10-01 15:25:52.9099|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC5" accepted. 
2025-10-01 15:25:52.9099|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC5" started. 
2025-10-01 15:25:52.9242|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0SMG7JEC5 established using the following protocol: Tls13 
2025-10-01 15:25:52.9242|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:25:52.9242|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:25:52.9242|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:25:52.9242|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:25:52.9242|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:25:52.9242|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:25:52.9242|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:25:52.9242|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:25:52.9242|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:25:52.9242|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:25:52.9242|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:25:52.9242|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:25:52.9242|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:25:52.9242|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:25:52.9242|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:25:52.9725|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:25:52.9725|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:25:53.1551|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:25:53.2044|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 221.9407ms 
2025-10-01 15:25:53.2044|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:25:53.2833|0|ERROR|LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare|_ WHAT HAVE YOU DONE!!! System.InvalidOperationException: Unable to resolve service for type 'LibraryManagementSystem.API.Services.IServices.IPdfService' while attempting to activate 'LibraryManagementSystem.API.Controllers.ReportsController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method8(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare.InvokeAsync(HttpContext context, RequestDelegate next) in C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem\Exceptions\GlobalExceptionHandler.cs:line 21
2025-10-01 15:25:53.3391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending HEADERS frame for stream ID 1 with length 59 and flags END_HEADERS. 
2025-10-01 15:25:53.3391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending DATA frame for stream ID 1 with length 248 and flags NONE. 
2025-10-01 15:25:53.3391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 15:25:53.3391|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 500 - application/json 413.8580ms 
2025-10-01 15:25:53.6114|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC5" received FIN. 
2025-10-01 15:25:53.6114|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SMG7JEC5" is closed. The last processed stream ID was 1. 
2025-10-01 15:25:53.6114|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0SMG7JEC5" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 15:25:53.6114|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0SMG7JEC5 completed. 
2025-10-01 15:25:53.6276|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SMG7JEC5" stopped. 
2025-10-01 15:27:59.9918|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:28:00.4595|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:28:01.0707|0|ERROR|LibraryManagementSystem.API.Program|Stopped program because of exception System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: LibraryManagementSystem.API.Services.IServices.IPdfService Lifetime: Scoped ImplementationType: LibraryManagementSystem.API.Services.PdfService': Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
2025-10-01 15:28:21.8238|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:28:22.1555|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:28:22.9613|0|ERROR|LibraryManagementSystem.API.Program|Stopped program because of exception System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: LibraryManagementSystem.API.Services.IServices.IPdfService Lifetime: Scoped ImplementationType: LibraryManagementSystem.API.Services.PdfService': Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
2025-10-01 15:30:15.5899|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:30:15.9839|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:30:16.4157|0|ERROR|LibraryManagementSystem.API.Program|Stopped program because of exception System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: LibraryManagementSystem.API.Services.IServices.IPdfService Lifetime: Scoped ImplementationType: LibraryManagementSystem.API.Services.PdfService': Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
2025-10-01 15:32:12.5434|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:32:12.8166|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:32:13.4176|0|ERROR|LibraryManagementSystem.API.Program|Stopped program because of exception System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: LibraryManagementSystem.API.Services.IServices.IPdfService Lifetime: Scoped ImplementationType: LibraryManagementSystem.API.Services.PdfService': Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
2025-10-01 15:36:44.6085|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:36:44.9435|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:36:45.6395|0|ERROR|LibraryManagementSystem.API.Program|Stopped program because of exception System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: LibraryManagementSystem.API.Services.IServices.IPdfService Lifetime: Scoped ImplementationType: LibraryManagementSystem.API.Services.PdfService': Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Playwright.IBrowser' while attempting to activate 'LibraryManagementSystem.API.Services.PdfService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)
2025-10-01 15:37:55.1424|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:37:55.4855|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:37:56.1093|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:37:56.1971|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:37:56.2504|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:37:56.2682|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:37:56.2881|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:37:56.3002|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:37:56.3142|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:37:56.3309|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:37:56.3309|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:37:56.3388|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:37:56.3388|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:37:56.3388|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:37:56.3388|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:37:56.3388|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:37:56.3388|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:37:56.3628|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:37:56.3628|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:37:56.3628|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:37:56.4600|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:37:56.4600|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:37:56.4858|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:37:56.6178|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:37:56.6276|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:37:56.6276|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:37:56.6276|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:37:56.6276|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:37:56.6276|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:37:56.6373|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:37:56.6373|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:37:56.6830|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:37:56.6830|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:37:56.6830|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:37:56.6830|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:38:23.8708|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:38:24.1377|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:38:24.6211|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:38:24.6799|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:38:24.7086|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:38:24.7200|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:38:24.7200|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:38:24.7298|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:38:24.7298|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:38:24.7298|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:38:24.7479|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:38:24.7479|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:38:24.7479|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:38:24.7479|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:38:24.7612|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:38:24.7612|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:38:24.7612|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:38:24.7612|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:38:24.7772|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:38:24.7772|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:38:24.8785|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:38:24.8785|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:38:24.8945|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:38:25.1071|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:38:25.1071|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:38:25.1071|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:38:25.1071|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:38:25.1071|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:38:25.1071|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:38:25.1307|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:38:25.1307|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:38:25.1815|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:38:25.1815|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:38:25.1815|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:38:25.1815|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:38:36.7252|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0STOGNP4R" accepted. 
2025-10-01 15:38:36.7252|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0STOGNP4R" started. 
2025-10-01 15:38:36.8223|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0STOGNP4R established using the following protocol: Tls13 
2025-10-01 15:38:36.8541|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:38:36.8592|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:38:36.8592|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:38:36.8592|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:38:36.8592|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:38:36.8592|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:36.8863|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:38:36.9172|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 15:38:37.0844|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:37.1495|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 15:38:37.1495|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 15:38:37.1518|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:37.1518|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:37.3016|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:37.3016|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:37.4146|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 15:38:37.4177|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 15:38:37.4177|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 15:38:37.4177|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 15:38:37.4177|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 15:38:37.4177|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 15:38:37.4177|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 15:38:37.4177|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:37.4330|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 15:38:37.4330|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 15:38:37.4330|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 15:38:37.4482|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 535.4886ms 
2025-10-01 15:38:37.4482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 3 with length 97 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:37.4482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 5 with length 52 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:37.4482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:37.4482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:37.4482|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 15:38:37.4482|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 15:38:37.4482|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 15:38:37.4482|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:37.4482|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:37.4948|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.4948|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 15:38:37.4948|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.4948|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:38:37.4948|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.4948|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:38:37.4948|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 15:38:37.4948|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.4948|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:37.4948|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:37.4948|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:37.4948|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:37.4948|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:37.5200|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:37.5200|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.5386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 3 with length 60 and flags END_HEADERS. 
2025-10-01 15:38:37.5386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 15:38:37.5386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 15:38:37.5386|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:38:37.5386|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:38:37.5386|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:37.5386|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:37.5386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 5 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:38:37.5386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:38:37.5386|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 83.8774ms 
2025-10-01 15:38:37.5386|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 83.8876ms 
2025-10-01 15:38:37.5495|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 15:38:37.5495|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 15:38:37.5495|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 93.0063ms 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 15:38:37.5654|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 15:38:37.5738|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 15:38:37.5738|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 110.9750ms 
2025-10-01 15:38:47.4892|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 11 with length 31 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.4892|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 15:38:47.4892|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:47.4892|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 15:38:47.4892|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 15:38:47.4892|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:47.4892|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:47.4892|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:47.4945|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:47.4945|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 15:38:47.4945|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 15:38:47.4945|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 11 with length 34 and flags END_HEADERS. 
2025-10-01 15:38:47.4945|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 11 with length 1319 and flags NONE. 
2025-10-01 15:38:47.4945|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 15:38:47.4945|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 6.9640ms 
2025-10-01 15:38:47.4945|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:38:47.4945|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 13 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.4945|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 15 with length 36 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 15:38:47.4945|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 17 with length 45 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.4945|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 19 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 15:38:47.4945|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:47.4945|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 13 with length 13 and flags END_HEADERS. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 13 with length 155 and flags NONE. 
2025-10-01 15:38:47.4945|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 15:38:47.4945|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 0.7602ms 
2025-10-01 15:38:47.4945|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 15:38:47.4945|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:38:47.4945|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 15:38:47.4945|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:47.4945|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:47.4945|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:47.4945|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:47.4945|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:47.4945|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 15:38:47.4945|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 15:38:47.4945|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 2.5379ms 
2025-10-01 15:38:47.4945|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 2.4727ms 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 15 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 17 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 19 with length 66 and flags END_HEADERS. 
2025-10-01 15:38:47.4945|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 9986 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 10240 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 1806 and flags NONE. 
2025-10-01 15:38:47.5110|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 19 with length 0 and flags END_STREAM. 
2025-10-01 15:38:47.5110|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 6.9212ms 
2025-10-01 15:38:47.5910|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 21 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.5910|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 15:38:47.5910|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:47.5910|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 15:38:47.5910|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 15:38:47.5910|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.5910|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:47.5910|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:47.5910|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 21 with length 35 and flags END_HEADERS. 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 21 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 21 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 21 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 21 with length 9530 and flags NONE. 
2025-10-01 15:38:47.8421|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 23 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:47.8421|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 15:38:47.8421|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:47.8421|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 15:38:47.8421|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 15:38:47.8421|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.8421|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:47.8421|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:47.8421|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.8421|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.8421|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 21 with length 0 and flags END_STREAM. 
2025-10-01 15:38:47.8421|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 256.1048ms 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending HEADERS frame for stream ID 23 with length 4 and flags END_HEADERS. 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 23 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 23 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 23 with length 16384 and flags NONE. 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 23 with length 9530 and flags NONE. 
2025-10-01 15:38:47.8784|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 15:38:47.8784|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" sending DATA frame for stream ID 23 with length 0 and flags END_STREAM. 
2025-10-01 15:38:47.8784|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 34.6576ms 
2025-10-01 15:38:55.6261|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0STOGNP4R" received HEADERS frame for stream ID 25 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:38:55.6261|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:38:55.6261|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:38:55.6261|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:38:55.6261|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:38:55.6261|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:38:55.6261|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:38:55.6261|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:38:55.6261|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:38:55.6770|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:38:55.6770|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:38:55.6770|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:38:55.6770|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:38:55.6770|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:38:55.6770|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:38:55.6825|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:38:55.9148|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:39:09.4858|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:39:09.4858|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:39:09.4858|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:39:09.4858|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:39:09.4858|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:39:09.4992|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:39:10.2294|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:39:10.2300|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:39:10.2300|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:39:10.5329|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:39:10.6592|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:39:10.8005|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:39:10.9654|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:39:10.9654|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:39:11.3790|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:39:11.4453|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:39:11.4868|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (41ms). 
2025-10-01 15:39:11.4868|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:11.8512|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:11.8564|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:39:11.8711|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (7ms). 
2025-10-01 15:39:11.8711|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (17ms). 
2025-10-01 15:39:11.8711|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:39:12.0260|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (141ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:39:12.0729|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.1512|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.1512|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2011|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2011|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2290|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2295|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2295|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2295|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.2295|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.2295|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 209ms reading results. 
2025-10-01 15:39:12.2461|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.2461|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 15:39:12.2461|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:39:12.2461|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:39:12.2461|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:39:12.2749|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:39:12.2829|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.3022|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.3022|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:39:12.3022|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:39:12.3022|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:39:12.3022|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:39:12.3180|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:39:12.3260|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3260|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:39:12.3395|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.3395|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 22ms reading results. 
2025-10-01 15:39:12.3395|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:39:12.3395|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:41:39.1667|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:41:39.4811|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:41:40.4317|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:41:40.5589|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:41:40.6123|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:41:40.6276|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:41:40.6276|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:41:40.6432|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:41:40.6432|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:41:40.6579|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:41:40.6579|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:41:40.6579|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:41:40.6579|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:41:40.6689|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:41:40.6689|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:41:40.6689|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:41:40.6689|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:41:40.6689|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:41:40.6689|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:41:40.6689|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:41:40.7449|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:41:40.7449|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:41:40.7449|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:41:40.9295|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:41:40.9344|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:41:40.9344|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:41:40.9344|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:41:40.9344|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:41:40.9344|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:41:40.9344|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:41:40.9344|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:41:40.9800|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:41:40.9800|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:41:40.9800|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:41:40.9800|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:41:44.8094|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SVGIEK57" accepted. 
2025-10-01 15:41:44.8094|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0SVGIEK57" started. 
2025-10-01 15:41:44.8879|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0SVGIEK57 established using the following protocol: Tls13 
2025-10-01 15:41:44.9367|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:41:44.9367|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:41:44.9367|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:41:44.9367|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:41:44.9367|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:41:44.9367|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:41:44.9628|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0SVGIEK57" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:41:44.9838|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:41:45.0005|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:41:45.0844|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:41:45.0844|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:41:45.0844|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:41:45.0844|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:41:45.1838|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:41:45.1838|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:41:45.2317|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:41:45.2317|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:41:45.4214|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:41:46.9256|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:41:46.9256|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:41:46.9256|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:41:46.9256|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:41:46.9256|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:41:46.9495|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:41:47.9229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:41:47.9229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:41:47.9229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:41:48.1918|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:41:48.2834|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:41:48.3709|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:41:48.4951|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:41:48.4951|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:41:48.9553|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:41:49.0100|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:41:49.0489|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (32ms). 
2025-10-01 15:41:49.0489|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.3757|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.3757|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:41:49.3896|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (4ms). 
2025-10-01 15:41:49.3896|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (11ms). 
2025-10-01 15:41:49.4031|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:41:49.5042|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (96ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:41:49.5820|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.6325|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.6404|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7064|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7064|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7353|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.7478|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.7478|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 244ms reading results. 
2025-10-01 15:41:49.7478|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.7696|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (9ms). 
2025-10-01 15:41:49.7696|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:41:49.7696|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:41:49.7696|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:41:49.7870|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:41:49.7870|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.8415|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.8415|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:41:49.8415|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:41:49.8415|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:41:49.8415|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:41:49.8415|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:41:49.8614|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8614|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:41:49.8754|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.8754|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 24ms reading results. 
2025-10-01 15:41:49.8754|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:41:49.8754|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:43:02.6275|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:43:02.9204|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:43:03.6585|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:43:03.7667|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:43:03.8088|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:43:03.8230|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:43:03.8230|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:43:03.8230|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:43:03.8427|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:43:03.8549|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:43:03.8549|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:43:03.8549|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:43:03.8549|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:43:03.8549|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:43:03.8549|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:43:03.8703|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:43:03.8703|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:43:03.8703|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:43:03.8703|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:43:03.8703|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:43:03.9744|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:43:03.9744|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:43:03.9956|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:43:04.2174|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:43:04.2291|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:43:04.2291|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:43:04.2291|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:43:04.2291|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:43:04.2291|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:43:04.2291|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:43:04.2291|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:43:04.3399|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:43:04.3399|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:43:04.3399|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:43:04.3399|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:43:05.1583|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T08GNAEB" accepted. 
2025-10-01 15:43:05.1583|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T08GNAEB" started. 
2025-10-01 15:43:05.2541|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T08GNAEB established using the following protocol: Tls13 
2025-10-01 15:43:05.3070|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:43:05.3158|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:43:05.3158|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:43:05.3158|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:43:05.3158|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:43:05.3158|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:43:05.3412|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T08GNAEB" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:43:05.3623|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:43:05.3740|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:43:05.4200|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:43:05.4200|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:43:05.4200|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:43:05.4200|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:43:05.5234|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:43:05.5234|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:43:05.5582|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:43:05.5582|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:43:05.7291|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:43:07.1516|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:43:07.1516|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:43:07.1516|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:43:07.1516|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:43:07.1516|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:43:07.1732|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:43:07.9060|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:43:07.9060|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:43:07.9060|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:43:08.1342|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:43:08.2304|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:43:08.3093|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:43:08.4053|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:43:08.4053|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:43:08.8399|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:43:08.8988|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:43:08.9480|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (39ms). 
2025-10-01 15:43:08.9577|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.2752|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.2815|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:43:09.2950|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 15:43:09.2950|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (16ms). 
2025-10-01 15:43:09.3133|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:43:09.4130|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (97ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:43:09.4899|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.5461|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.5461|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6156|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6229|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6561|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.6691|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.6869|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 257ms reading results. 
2025-10-01 15:43:09.6869|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.7053|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (12ms). 
2025-10-01 15:43:09.7214|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:43:09.7214|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:43:09.7214|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:43:09.7479|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:43:09.7479|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.7811|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.7811|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:43:09.7811|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:43:09.7811|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:43:09.7811|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:43:09.8022|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:43:09.8099|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8099|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:43:09.8231|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.8231|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 21ms reading results. 
2025-10-01 15:43:09.8231|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:43:09.8231|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:46:03.7417|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:46:04.1601|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:46:04.8128|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:48:15.9225|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:48:16.3188|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:48:17.0858|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:48:17.1703|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:48:17.2210|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:48:17.2334|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:48:17.2541|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:48:17.2541|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:48:17.2746|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:48:17.2852|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:48:17.2852|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:48:17.2852|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:48:17.2852|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:48:17.2976|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:48:17.2976|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:48:17.2976|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:48:17.2976|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:48:17.2976|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:48:17.3113|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:48:17.3113|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:48:17.3821|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:48:17.3821|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:48:17.4025|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:48:17.5402|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:48:17.5464|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:48:17.5464|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:48:17.5464|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:48:17.5464|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:48:17.5464|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:48:17.5464|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:48:17.5464|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:48:17.6121|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:48:17.6121|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:48:17.6121|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:48:17.6121|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:48:38.7509|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T3BU3DQ6" accepted. 
2025-10-01 15:48:38.7674|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T3BU3DQ6" started. 
2025-10-01 15:48:38.8616|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T3BU3DQ6 established using the following protocol: Tls13 
2025-10-01 15:48:38.9077|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:48:38.9183|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:48:38.9183|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:48:38.9183|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:48:38.9183|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:48:38.9183|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:48:38.9475|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T3BU3DQ6" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:48:38.9760|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:48:38.9941|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:48:39.0619|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:48:39.0619|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:48:39.0619|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:48:39.0619|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:48:39.1615|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:48:39.1615|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:48:39.2286|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:48:39.2301|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:48:39.4831|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:48:41.3703|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:48:41.3703|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:48:41.3703|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:48:41.3703|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:48:41.3703|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:48:41.3968|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:48:42.1862|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:48:42.1862|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:48:42.1862|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:48:42.4784|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:48:42.6180|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:48:42.7333|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:48:42.8533|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:48:42.8553|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:48:43.2369|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:48:43.3012|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:48:43.3344|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (29ms). 
2025-10-01 15:48:43.3344|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:43.6909|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:43.6989|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:48:43.6989|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 15:48:43.7154|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (17ms). 
2025-10-01 15:48:43.7154|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:48:43.8797|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (150ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:48:43.9505|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.0277|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.0277|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1103|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1103|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.1420|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.1592|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 271ms reading results. 
2025-10-01 15:48:44.1592|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.1725|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 15:48:44.1725|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:48:44.1725|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:48:44.1725|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:48:44.2007|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:48:44.2007|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.2191|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.2191|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:48:44.2191|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:48:44.2191|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:48:44.2191|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:48:44.2298|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:48:44.2298|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2298|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:48:44.2527|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.2527|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 24ms reading results. 
2025-10-01 15:48:44.2527|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:48:44.2527|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:51:10.1370|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:51:10.7038|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:51:11.3019|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:51:11.3628|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:51:11.3907|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:51:11.3907|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:51:11.4058|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:51:11.4058|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:51:11.4058|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:51:11.4243|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:51:11.4243|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:51:11.4243|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:51:11.4243|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:51:11.4332|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:51:11.4332|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:51:11.4332|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:51:11.4332|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:51:11.4332|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:51:11.4332|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:51:11.4332|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:51:11.4999|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:51:11.4999|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:51:11.4999|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:51:11.6110|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:51:11.6110|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:51:11.6110|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:51:11.6110|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:51:11.6110|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:51:11.6110|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:51:11.6235|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:51:11.6235|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:51:11.6656|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:51:11.6656|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:51:11.6718|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:51:11.6718|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:51:14.2947|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T4Q9FSDK" accepted. 
2025-10-01 15:51:14.2947|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T4Q9FSDK" started. 
2025-10-01 15:51:14.3645|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T4Q9FSDK established using the following protocol: Tls13 
2025-10-01 15:51:14.3927|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:51:14.3927|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:51:14.3927|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:51:14.3927|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:51:14.3927|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:51:14.3927|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:51:14.4207|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T4Q9FSDK" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:51:14.4424|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:51:14.4585|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:51:14.5328|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:51:14.5328|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:51:14.5328|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:51:14.5328|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:51:14.6216|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:51:14.6216|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:51:14.6515|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:51:14.6515|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:51:14.8656|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:51:16.2857|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:51:16.2857|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:51:16.2857|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:51:16.2857|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:51:16.2857|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:51:16.3047|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:51:17.1229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:51:17.1229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:51:17.1229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:51:17.3554|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:51:17.4726|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:51:17.5837|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:51:17.7367|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:51:17.7367|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:51:18.0542|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:51:18.1328|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:51:18.1495|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (12ms). 
2025-10-01 15:51:18.1518|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:18.4840|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:18.4840|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:51:18.4972|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 15:51:18.4972|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (11ms). 
2025-10-01 15:51:18.5109|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:51:18.7168|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (197ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:51:18.7923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:18.8611|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:18.8732|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:18.9606|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:18.9730|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.0113|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.0350|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 308ms reading results. 
2025-10-01 15:51:19.0350|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.0496|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 15:51:19.0496|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:51:19.0582|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:51:19.0582|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:51:19.0770|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:51:19.0770|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.0974|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.0974|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:51:19.0974|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:51:19.0974|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:51:19.0974|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:51:19.1129|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:51:19.1236|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:51:19.1236|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.1236|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 21ms reading results. 
2025-10-01 15:51:19.1236|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:51:19.1236|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:52:11.9549|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:52:12.4187|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:52:13.1887|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:52:13.2962|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:52:13.3602|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:52:13.3832|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:52:13.3927|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:52:13.4085|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:52:13.4182|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:52:13.4367|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:52:13.4367|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:52:13.4367|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:52:13.4367|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:52:13.4498|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:52:13.4498|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:52:13.4498|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:52:13.4498|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:52:13.4498|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:52:13.4498|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:52:13.4498|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:52:13.5494|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:52:13.5494|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:52:13.5629|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:52:13.6908|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:52:13.6979|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:52:13.6979|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:52:13.6979|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:52:13.6979|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:52:13.6979|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:52:13.6979|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:52:13.6979|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:52:13.7606|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:52:13.7606|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:52:13.7606|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:52:13.7606|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:52:13.7606|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5C0M3S5" accepted. 
2025-10-01 15:52:13.7606|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5C0M3S5" started. 
2025-10-01 15:52:13.8156|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5C0M3S6" accepted. 
2025-10-01 15:52:13.8156|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5C0M3S6" started. 
2025-10-01 15:52:13.8497|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0T5C0M3S5" received FIN. 
2025-10-01 15:52:13.8745|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T5C0M3S5 established using the following protocol: Tls13 
2025-10-01 15:52:13.8745|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T5C0M3S6 established using the following protocol: Tls13 
2025-10-01 15:52:13.9273|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S5" is closed. The last processed stream ID was 0. 
2025-10-01 15:52:13.9273|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:52:13.9384|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0T5C0M3S5" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 15:52:13.9384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:52:13.9384|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:52:13.9384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:52:13.9384|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0T5C0M3S5 completed. 
2025-10-01 15:52:13.9384|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:52:13.9384|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:52:13.9493|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5C0M3S5" stopped. 
2025-10-01 15:52:13.9771|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5C0M3S6" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:52:14.0105|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:52:14.0301|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:52:14.0862|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:52:14.0862|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:52:14.0892|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:52:14.0892|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:52:14.1634|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:52:14.1634|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:52:14.2035|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:52:14.2035|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:52:14.4058|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:52:15.7788|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:52:15.7788|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:52:15.7788|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:52:15.7788|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:52:15.7788|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:52:15.7924|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:52:16.5758|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:52:16.5758|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:52:16.5758|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:52:16.8593|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:52:16.9635|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:52:17.0462|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:52:17.1590|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:52:17.1590|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:52:17.6441|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:52:17.7011|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:52:17.7342|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (26ms). 
2025-10-01 15:52:17.7342|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.0527|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.0592|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:52:18.0592|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (4ms). 
2025-10-01 15:52:18.0592|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (6ms). 
2025-10-01 15:52:18.0814|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:52:18.1508|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (69ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:52:18.2218|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.3139|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.3139|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.3744|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.3744|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.4220|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.4422|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 282ms reading results. 
2025-10-01 15:52:18.4422|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.4529|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (6ms). 
2025-10-01 15:52:18.4529|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:52:18.4529|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:52:18.4529|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:52:18.4714|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:52:18.4714|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.4925|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.4925|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:52:18.4925|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:52:18.4925|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:52:18.4925|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:52:18.5013|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:52:18.5115|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5115|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:52:18.5275|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.5275|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 27ms reading results. 
2025-10-01 15:52:18.5275|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:52:18.5275|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:53:02.2990|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:53:02.6365|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:53:03.1297|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:53:03.2378|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:53:03.2739|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:53:03.2863|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:53:03.2863|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:53:03.3003|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:53:03.3003|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:53:03.3171|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:53:03.3171|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:53:03.3241|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:53:03.3241|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:53:03.3241|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:53:03.3241|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:53:03.3241|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:53:03.3241|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:53:03.3460|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:53:03.3460|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:53:03.3460|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:53:03.4485|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:53:03.4506|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:53:03.4506|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:53:03.5699|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:53:03.5699|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:53:03.5699|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:53:03.5699|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:53:03.5699|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:53:03.5699|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:53:03.5841|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:53:03.5841|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:53:03.6233|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:53:03.6233|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:53:03.6233|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:53:03.6248|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:53:06.5654|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5RO66J6" accepted. 
2025-10-01 15:53:06.5654|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T5RO66J6" started. 
2025-10-01 15:53:06.6222|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T5RO66J6 established using the following protocol: Tls13 
2025-10-01 15:53:06.6469|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:53:06.6519|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:53:06.6519|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:53:06.6519|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:53:06.6519|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:53:06.6519|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:53:06.6697|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T5RO66J6" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:53:06.7529|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:53:06.7739|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:53:06.8585|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:53:06.8585|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:53:06.8585|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:53:06.8585|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:53:06.9684|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:53:06.9684|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:53:07.0227|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:53:07.0227|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:53:07.0227|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:53:07.0227|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:53:07.0227|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:53:07.0227|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:53:07.0279|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:53:07.1814|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:53:08.4724|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:53:08.4724|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:53:08.4724|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:53:08.4724|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:53:08.4724|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:53:08.4874|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:53:09.3342|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:53:09.3342|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:53:09.3342|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:53:09.5713|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:53:09.6782|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:53:09.7737|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:53:09.8752|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:53:09.8752|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:53:10.2468|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:53:10.2922|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:53:10.3158|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (19ms). 
2025-10-01 15:53:10.3158|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.5560|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.5602|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:53:10.5602|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 15:53:10.5602|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 15:53:10.5806|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:53:10.6491|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (68ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:53:10.6923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.7475|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.7475|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8208|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8282|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8516|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.8576|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.8576|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 208ms reading results. 
2025-10-01 15:53:10.8722|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.8722|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 15:53:10.8930|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:53:10.8930|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:53:10.8930|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:53:10.9044|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:53:10.9044|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.9215|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.9215|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:53:10.9215|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:53:10.9215|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:53:10.9215|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:53:10.9215|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:53:10.9411|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9411|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:10.9517|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.9517|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 20ms reading results. 
2025-10-01 15:53:10.9517|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:10.9517|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:53:43.5003|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:53:43.8378|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:53:44.6050|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:53:44.6910|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:53:44.7336|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:53:44.7465|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:53:44.7465|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:53:44.7612|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:53:44.7612|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:53:44.7783|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:53:44.7783|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:53:44.7783|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:53:44.7783|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:53:44.7928|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:53:44.7928|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:53:44.7928|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:53:44.7928|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:53:44.7928|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:53:44.8096|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:53:44.8096|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:53:44.9009|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:53:44.9019|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:53:44.9177|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:53:45.0635|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:53:45.0748|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:53:45.0748|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:53:45.0748|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:53:45.0748|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:53:45.0748|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:53:45.0748|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:53:45.0748|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:53:45.1343|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:53:45.1343|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:53:45.1343|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:53:45.1343|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:53:45.8770|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T67F35P9" accepted. 
2025-10-01 15:53:45.8770|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T67F35P9" started. 
2025-10-01 15:53:45.9394|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T67F35P9 established using the following protocol: Tls13 
2025-10-01 15:53:45.9651|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:53:45.9651|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:53:45.9651|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:53:45.9651|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:53:45.9651|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:53:45.9651|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:53:46.0002|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T67F35P9" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:53:46.0231|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:53:46.0378|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:53:46.1098|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:53:46.1098|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:53:46.1098|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:53:46.1098|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:53:46.1813|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:53:46.1850|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:53:46.2353|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:53:46.2353|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:53:46.3963|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:53:47.6816|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:53:47.6820|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:53:47.6820|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:53:47.6820|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:53:47.6820|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:53:47.6820|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:53:48.3732|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:53:48.3732|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:53:48.3732|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:53:48.5865|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:53:48.7066|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:53:48.7993|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:53:48.9437|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:53:48.9437|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:53:49.2973|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:53:49.3755|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:53:49.4074|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (26ms). 
2025-10-01 15:53:49.4074|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.6468|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.6468|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:53:49.6573|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 15:53:49.6573|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 15:53:49.6573|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:53:49.7079|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:53:49.7359|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.7742|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.7742|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8099|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8099|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.8293|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.8394|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 126ms reading results. 
2025-10-01 15:53:49.8394|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.8394|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (4ms). 
2025-10-01 15:53:49.8394|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:53:49.8394|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:53:49.8394|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:53:49.8394|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:53:49.8595|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.8956|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.8956|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:53:49.8956|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:53:49.8956|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:53:49.8956|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:53:49.9052|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:53:49.9052|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:53:49.9052|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.9052|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 11ms reading results. 
2025-10-01 15:53:49.9052|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:53:49.9052|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:54:16.5098|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:54:16.7786|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:54:17.2262|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:54:17.2886|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:54:17.3131|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:54:17.3131|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:54:17.3131|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:54:17.3325|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:54:17.3325|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:54:17.3452|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:54:17.3452|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:54:17.3452|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:54:17.3452|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:54:17.3452|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:54:17.3452|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:54:17.3552|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:54:17.3552|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:54:17.3552|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:54:17.3552|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:54:17.3552|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:54:17.4114|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:54:17.4114|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:54:17.4202|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:54:17.5113|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:54:17.5113|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:54:17.5113|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:54:17.5113|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:54:17.5113|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:54:17.5113|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:54:17.5113|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:54:17.5113|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:54:17.5630|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:54:17.5630|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:54:17.5630|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:54:17.5630|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:54:19.0893|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T6HBQO61" accepted. 
2025-10-01 15:54:19.0893|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T6HBQO61" started. 
2025-10-01 15:54:19.1481|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T6HBQO61 established using the following protocol: Tls13 
2025-10-01 15:54:19.1735|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:54:19.1735|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:54:19.1735|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:54:19.1735|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:54:19.1735|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:54:19.1735|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:54:19.2109|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T6HBQO61" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:54:19.2365|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:54:19.2524|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:54:19.3325|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:54:19.3325|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:54:19.3325|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:54:19.3325|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:54:19.4566|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:54:19.4566|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:54:19.4947|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:54:19.4947|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:54:19.6687|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:54:20.8946|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:54:20.8946|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:54:20.8946|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:54:20.8946|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:54:20.8946|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:54:20.9090|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:54:21.6351|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:54:21.6351|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:54:21.6351|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:54:21.9840|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:54:22.0731|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:54:22.1506|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:54:22.2588|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:54:22.2602|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:54:22.6424|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:54:22.6914|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:54:22.7101|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (14ms). 
2025-10-01 15:54:22.7101|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:22.9515|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:22.9515|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:54:22.9658|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (5ms). 
2025-10-01 15:54:22.9658|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (12ms). 
2025-10-01 15:54:22.9658|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:54:23.0587|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:54:23.1152|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.1720|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.1720|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.2676|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.2786|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3224|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3224|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.3235|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.3514|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 278ms reading results. 
2025-10-01 15:54:23.3545|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.3545|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (10ms). 
2025-10-01 15:54:23.3702|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:54:23.3702|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:54:23.3702|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:54:23.3943|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:54:23.4136|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.4621|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.4621|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:54:23.4621|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:54:23.4621|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:54:23.4621|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:54:23.4704|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:54:23.4808|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4808|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:54:23.4977|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.4977|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 28ms reading results. 
2025-10-01 15:54:23.4977|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:54:23.4977|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:56:07.2891|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:56:07.6251|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:56:08.1489|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:56:08.2219|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:56:08.2535|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:56:08.2535|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:56:08.2664|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:56:08.2664|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:56:08.2664|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:56:08.2943|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:56:08.2943|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:56:08.2943|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:56:08.2943|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:56:08.3099|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:56:08.3099|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:56:08.3099|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:56:08.3099|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:56:08.3321|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:56:08.3321|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:56:08.3321|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:56:08.4221|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:56:08.4221|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:56:08.4221|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:56:08.5998|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:56:08.6066|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:56:08.6066|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:56:08.6066|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:56:08.6066|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:56:08.6066|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:56:08.6066|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:56:08.6066|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:56:08.6576|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:56:08.6576|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:56:08.6576|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:56:08.6576|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:56:14.6521|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T7JPTL2V" accepted. 
2025-10-01 15:56:14.6521|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T7JPTL2V" started. 
2025-10-01 15:56:14.7253|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T7JPTL2V established using the following protocol: Tls13 
2025-10-01 15:56:14.7552|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:56:14.7639|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:56:14.7639|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:56:14.7639|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:56:14.7639|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:56:14.7639|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:56:14.7877|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T7JPTL2V" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:56:14.8138|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:56:14.8328|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:56:14.9102|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:56:14.9102|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:56:14.9102|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:56:14.9102|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:56:15.0102|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:56:15.0102|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:56:15.0446|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:56:15.0446|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:56:15.1851|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:56:16.4011|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:56:16.4014|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:56:16.4014|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:56:16.4014|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:56:16.4014|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:56:16.4014|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:56:17.0543|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:56:17.0543|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:56:17.0543|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:56:17.2939|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:56:17.4048|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:56:17.4902|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:56:17.6174|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:56:17.6174|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:56:17.9458|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:56:17.9834|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:56:18.0106|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (22ms). 
2025-10-01 15:56:18.0106|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.2890|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.2941|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:56:18.2941|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (7ms). 
2025-10-01 15:56:18.3093|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (15ms). 
2025-10-01 15:56:18.3093|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:56:18.4167|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (96ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:56:18.4511|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5065|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5122|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5536|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5593|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5824|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.5880|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.5880|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 171ms reading results. 
2025-10-01 15:56:18.5880|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.6075|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (5ms). 
2025-10-01 15:56:18.6075|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:56:18.6075|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:56:18.6075|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:56:18.6281|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:56:18.6281|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.6487|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.6487|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:56:18.6487|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:56:18.6487|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:56:18.6487|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:56:18.6585|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:56:18.6673|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6673|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:56:18.6866|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.6866|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 28ms reading results. 
2025-10-01 15:56:18.6866|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:56:18.6866|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:57:26.4330|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 15:57:26.7713|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 15:57:27.2655|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 15:57:27.3221|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 15:57:27.3488|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 15:57:27.3565|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 15:57:27.3565|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 15:57:27.3789|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 15:57:27.3789|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 15:57:27.3916|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 15:57:27.3916|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:57:27.3916|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 15:57:27.3916|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 15:57:27.3916|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 15:57:27.3916|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 15:57:27.3916|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 15:57:27.3916|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 15:57:27.4060|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 15:57:27.4060|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 15:57:27.4060|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 15:57:27.4847|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 15:57:27.4847|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 15:57:27.4983|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 15:57:27.6313|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 15:57:27.6313|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 15:57:27.6313|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 15:57:27.6313|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 15:57:27.6313|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 15:57:27.6313|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 15:57:27.6427|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:57:27.6427|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 15:57:27.6717|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 15:57:27.6717|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 15:57:27.6717|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 15:57:27.6717|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 15:57:31.5560|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T8ANAUOU" accepted. 
2025-10-01 15:57:31.5573|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T8ANAUOU" started. 
2025-10-01 15:57:31.6083|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0T8ANAUOU established using the following protocol: Tls13 
2025-10-01 15:57:31.6782|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:57:31.6876|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:57:31.6876|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 15:57:31.6876|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:57:31.6876|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:57:31.6876|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 15:57:31.7159|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 15:57:31.7397|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 15:57:31.7529|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 15:57:31.8083|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:57:31.8083|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 15:57:31.8083|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:57:31.8083|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 15:57:31.8766|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 15:57:31.8766|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:57:31.9201|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 15:57:31.9201|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:57:32.0895|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 15:57:33.2994|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 15:57:33.2994|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:57:33.2994|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:57:33.2994|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:57:33.2994|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:57:33.3175|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 15:57:34.0679|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 15:57:34.0679|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 15:57:34.0679|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 15:57:34.2835|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 15:57:34.3725|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 15:57:34.4303|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 15:57:34.5350|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 15:57:34.5350|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 15:57:35.0072|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:57:35.0508|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 15:57:35.0723|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (15ms). 
2025-10-01 15:57:35.0748|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.3278|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.3278|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:57:35.3428|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (5ms). 
2025-10-01 15:57:35.3428|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (13ms). 
2025-10-01 15:57:35.3428|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:57:35.4238|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (67ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 15:57:35.4748|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.5300|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.5300|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.5988|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6067|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6332|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.6433|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.6529|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 220ms reading results. 
2025-10-01 15:57:35.6529|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.6529|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 15:57:35.6684|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 15:57:35.6684|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 15:57:35.6684|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 15:57:35.6885|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 15:57:35.6885|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.7102|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.7102|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 15:57:35.7102|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:57:35.7102|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 15:57:35.7102|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:57:35.7293|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 15:57:35.7393|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7393|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 15:57:35.7609|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.7609|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 32ms reading results. 
2025-10-01 15:57:35.7609|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:35.7609|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 15:57:36.7729|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 3448.886ms. 
2025-10-01 15:57:36.7729|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:57:36.7729|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 15:57:36.7729|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:57:36.7729|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 15:57:36.7729|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:57:36.7729|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:57:36.7763|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 15:57:36.7763|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 15:57:36.7763|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 15:57:36.7981|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 15:57:36.7981|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 15:57:36.7981|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 6696 and flags NONE. 
2025-10-01 15:57:36.7981|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 15:57:36.8075|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:57:36.8075|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 15:57:36.8075|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 4887.0376ms 
2025-10-01 15:57:36.8075|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 15:57:36.8075|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 15:57:36.8075|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 15:57:36.8256|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 15:57:36.8256|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (0ms). 
2025-10-01 15:57:36.8256|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 72232 application/pdf 5095.3760ms 
2025-10-01 15:58:01.3960|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0T8ANAUOU" received FIN. 
2025-10-01 15:58:01.4299|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0T8ANAUOU" is closed. The last processed stream ID was 1. 
2025-10-01 15:58:01.4299|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0T8ANAUOU" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 15:58:01.4327|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0T8ANAUOU completed. 
2025-10-01 15:58:01.4327|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0T8ANAUOU" stopped. 
2025-10-01 16:01:06.0049|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:01:06.4779|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:01:07.1217|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:01:07.2188|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:01:07.2752|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:01:07.2907|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:01:07.3058|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:01:07.3130|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:01:07.3320|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:01:07.3483|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:01:07.3483|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:01:07.3560|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:01:07.3560|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:01:07.3560|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:01:07.3560|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:01:07.3560|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:01:07.3560|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:01:07.3810|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:01:07.3810|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:01:07.3810|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:01:07.4761|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:01:07.4761|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:01:07.5004|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:01:07.6851|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:01:07.6851|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:01:07.6851|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:01:07.6851|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:01:07.6851|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:01:07.6851|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:01:07.7010|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAB4L482" accepted. 
2025-10-01 16:01:07.7010|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAB4L482" started. 
2025-10-01 16:01:07.7010|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:01:07.7010|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:01:07.7535|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAB4L483" accepted. 
2025-10-01 16:01:07.7535|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAB4L483" started. 
2025-10-01 16:01:07.8275|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TAB4L482 established using the following protocol: Tls13 
2025-10-01 16:01:07.8275|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TAB4L483 established using the following protocol: Tls13 
2025-10-01 16:01:07.8439|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:01:07.8439|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:01:07.8439|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:01:07.8439|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:01:07.8687|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:07.8763|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:07.8763|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:07.8763|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:07.8763|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:07.8763|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:07.9010|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:07.9232|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:01:08.1450|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:08.2012|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:01:08.2012|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:01:08.2012|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:08.2012|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:08.3022|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:08.3022|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:08.3747|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:01:08.3747|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:01:08.3747|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:01:08.3747|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:01:08.3747|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:01:08.3747|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:01:08.3747|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:08.3747|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:01:08.3747|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:01:08.3857|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:01:08.3857|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 473.6513ms 
2025-10-01 16:01:08.4186|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 3 with length 96 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:08.4186|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:01:08.4186|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:08.4186|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:08.4186|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:08.4186|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:01:08.4186|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:08.4186|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:01:08.4186|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:08.4186|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:01:08.4186|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4186|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:01:08.4186|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4186|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:01:08.4186|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4186|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:01:08.4186|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:08.4186|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4186|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:08.4186|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:08.4186|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:08.4186|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:08.4361|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:08.4361|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4361|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:01:08.4361|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:01:08.4361|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:01:08.4606|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:01:08.4606|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:01:08.4606|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 40.3484ms 
2025-10-01 16:01:08.4606|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:01:08.4606|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:01:08.4606|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:08.4606|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:08.4634|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 42.3284ms 
2025-10-01 16:01:08.4634|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 43.7039ms 
2025-10-01 16:01:08.4634|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:01:08.4634|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 3 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:01:08.5383|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 9 with length 149 and flags END_HEADERS. 
2025-10-01 16:01:08.5383|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:01:08.5419|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:01:08.5419|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 126.6815ms 
2025-10-01 16:01:08.7420|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:08.7420|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:01:08.7420|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:08.7420|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:01:08.7420|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:01:08.7420|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:08.7420|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:08.7459|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:08.7459|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:09.0852|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 16:01:09.0852|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:09.0852|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:09.0852|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:09.0852|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:01:09.0852|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:09.0852|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:01:09.0852|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:09.0888|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:01:09.0888|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:01:09.0888|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:09.0888|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:09.0888|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:09.0888|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:09.0888|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:09.0888|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:01:09.0888|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 352.3418ms 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:01:09.1331|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:09.1331|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 45.1575ms 
2025-10-01 16:01:09.1331|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:01:12.5933|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L482" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:12.5933|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:01:12.5933|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:12.5933|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:01:12.5933|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:01:12.5933|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:01:12.5933|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:12.5933|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:12.5933|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:01:12.6600|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:01:12.6600|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:01:12.8617|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:01:14.9405|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:01:14.9405|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:01:14.9405|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:01:14.9405|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:01:14.9405|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:01:14.9588|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:01:15.7601|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:01:15.7605|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:01:15.7605|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:01:16.0959|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:01:16.2471|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:01:16.3484|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:01:16.4775|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:01:16.4795|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:01:16.6714|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TAB4L483" received FIN. 
2025-10-01 16:01:16.6714|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0TAB4L483 completed. 
2025-10-01 16:01:16.6714|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAB4L483" is closed. The last processed stream ID was 0. 
2025-10-01 16:01:16.6714|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TAB4L483" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:01:16.6896|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAB4L483" stopped. 
2025-10-01 16:01:16.8989|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:01:16.9740|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:01:17.0161|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (42ms). 
2025-10-01 16:01:17.0161|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.3594|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.3594|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:01:17.3764|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:01:17.3764|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (14ms). 
2025-10-01 16:01:17.3923|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:01:17.5378|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (145ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:01:17.6006|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.6657|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.6738|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7282|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7345|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7583|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.7649|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.7649|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 227ms reading results. 
2025-10-01 16:01:17.7770|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.7770|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (6ms). 
2025-10-01 16:01:17.7770|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:01:17.7770|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:01:17.7770|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:01:17.8032|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:01:17.8086|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.8260|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.8260|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:01:17.8260|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:01:17.8260|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:01:17.8260|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:01:17.8475|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:01:17.8559|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:01:17.8559|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.8559|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 17ms reading results. 
2025-10-01 16:01:17.8559|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:01:17.8559|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:01:52.2532|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:01:52.6645|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:01:53.3247|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:01:53.4261|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:01:53.4697|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:01:53.4825|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:01:53.4825|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:01:53.4985|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:01:53.4985|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:01:53.5176|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:01:53.5176|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:01:53.5270|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:01:53.5270|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:01:53.5270|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:01:53.5270|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:01:53.5270|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:01:53.5270|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:01:53.5425|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:01:53.5425|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:01:53.5425|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:01:53.6260|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:01:53.6260|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:01:53.6428|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:01:53.7903|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:01:53.8004|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:01:53.8004|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:01:53.8004|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:01:53.8004|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:01:53.8004|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:01:53.8131|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:01:53.8131|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:01:53.8719|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:01:53.8719|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:01:53.8719|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:01:53.8719|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:01:55.5396|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAPCS9UD" accepted. 
2025-10-01 16:01:55.5396|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAPCS9UD" started. 
2025-10-01 16:01:55.5989|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TAPCS9UD established using the following protocol: Tls13 
2025-10-01 16:01:55.6270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:55.6270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:55.6270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:55.6270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:55.6270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:55.6270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:55.6544|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:55.6730|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:01:55.7911|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:55.8340|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:01:55.8340|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:01:55.8340|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:55.8340|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:55.9221|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:55.9221|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:55.9841|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:01:55.9841|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:01:55.9841|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:01:55.9841|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:01:55.9950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:01:55.9950|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:01:55.9950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:01:55.9950|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:01:55.9950|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:01:55.9950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:01:55.9950|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 332.1676ms 
2025-10-01 16:01:56.0166|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 3 with length 97 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.0166|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 5 with length 89 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.0166|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 7 with length 36 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.0166|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:01:56.0166|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:01:56.0166|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:01:56.0166|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:56.0166|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.0166|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:56.0609|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.0609|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:01:56.0609|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:01:56.0609|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:01:56.0609|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.0609|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.0609|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.0609|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:56.0609|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:56.0609|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:56.0609|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:56.0609|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:56.0609|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:56.0609|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.0922|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:01:56.1286|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:01:56.1286|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:01:56.1286|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:01:56.1286|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 3 with length 60 and flags END_HEADERS. 
2025-10-01 16:01:56.1286|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 111.1308ms 
2025-10-01 16:01:56.1286|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 110.9908ms 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 5 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:01:56.1286|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:01:56.1286|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 16:01:56.1286|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 115.1407ms 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:01:56.1553|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:01:56.1553|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 102.0663ms 
2025-10-01 16:01:56.2768|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.2768|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:01:56.2768|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:56.2768|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:01:56.2768|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:01:56.2768|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.2768|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:56.2768|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:56.2768|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.5939|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 16:01:56.5939|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:56.5939|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:56.5939|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:01:56.5939|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:01:56.5939|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:56.5939|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:01:56.5939|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:56.5939|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:01:56.5939|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:01:56.5939|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.5939|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:56.5939|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:56.5939|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.5939|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.5939|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 326.2585ms 
2025-10-01 16:01:56.6036|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:01:56.6703|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:01:56.6703|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 73.1568ms 
2025-10-01 16:01:56.6703|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:01:56.7269|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TAPCS9UD" received FIN. 
2025-10-01 16:01:56.7269|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TAPCS9UD" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:01:56.7320|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UD" is closed. The last processed stream ID was 13. 
2025-10-01 16:01:56.7320|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0TAPCS9UD completed. 
2025-10-01 16:01:56.7320|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAPCS9UD" stopped. 
2025-10-01 16:01:58.9296|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAPCS9UE" accepted. 
2025-10-01 16:01:58.9296|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TAPCS9UE" started. 
2025-10-01 16:01:58.9446|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TAPCS9UE established using the following protocol: Tls13 
2025-10-01 16:01:58.9446|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:58.9446|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:58.9446|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:01:58.9446|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:58.9446|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:01:58.9446|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:01:58.9446|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TAPCS9UE" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:01:58.9446|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:01:58.9446|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:01:58.9446|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:01:58.9446|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:01:58.9446|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:01:58.9446|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:01:58.9446|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:01:58.9446|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:01:58.9869|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:01:58.9869|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:01:59.1806|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:02:00.5893|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:02:00.5893|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:02:00.5893|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:02:00.5893|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:02:00.5893|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:02:00.6119|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:02:01.4229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:02:01.4229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:02:01.4229|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:02:01.7043|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:02:01.8255|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:02:01.9104|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:02:02.0222|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:02:02.0222|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:02:02.3969|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:02:02.4500|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:02:02.4725|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (23ms). 
2025-10-01 16:02:02.4725|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:02.7290|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:02.7296|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:02:02.7296|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (4ms). 
2025-10-01 16:02:02.7296|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (7ms). 
2025-10-01 16:02:02.7517|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:02:02.8319|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (77ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:02:02.8884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:02.9510|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:02.9510|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0125|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0125|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.0463|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.0639|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 223ms reading results. 
2025-10-01 16:02:03.0639|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.0793|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (11ms). 
2025-10-01 16:02:03.0793|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:02:03.0793|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:02:03.0793|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:02:03.0961|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:02:03.0961|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.1166|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.1166|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:02:03.1166|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:02:03.1166|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:02:03.1166|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:02:03.1278|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:02:03.1376|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1376|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:02:03.1523|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.1523|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 25ms reading results. 
2025-10-01 16:02:03.1523|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:02:03.1523|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:03:44.0173|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:03:44.3590|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:03:45.0295|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:03:45.1399|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:03:45.1796|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:03:45.1949|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:03:45.2012|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:03:45.2227|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:03:45.2342|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:03:45.2504|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:03:45.2504|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:03:45.2716|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:03:45.2716|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:03:45.2811|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:03:45.2811|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:03:45.2811|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:03:45.2811|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:03:45.2941|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:03:45.2941|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:03:45.2941|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:03:45.3658|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:03:45.3658|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:03:45.3773|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:03:45.5364|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:03:45.5439|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:03:45.5439|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:03:45.5439|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:03:45.5439|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:03:45.5439|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:03:45.5439|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:03:45.5439|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:03:45.6150|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:03:45.6150|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:03:45.6150|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:03:45.6150|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:03:48.2359|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TBQVKH6J" accepted. 
2025-10-01 16:03:48.2359|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TBQVKH6J" started. 
2025-10-01 16:03:48.3068|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TBQVKH6J established using the following protocol: Tls13 
2025-10-01 16:03:48.3405|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:03:48.3405|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:03:48.3405|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:03:48.3405|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:03:48.3405|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:03:48.3405|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.3655|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:03:48.3864|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:03:48.4999|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:48.5465|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:03:48.5465|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:03:48.5465|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:03:48.5465|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:48.6207|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:48.6207|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:03:48.6893|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:03:48.6893|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:03:48.6893|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:03:48.6893|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:03:48.7030|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:03:48.7030|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:03:48.7030|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:03:48.7030|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:03:48.7030|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:03:48.7030|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:03:48.7030|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 327.2389ms 
2025-10-01 16:03:48.7143|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 3 with length 96 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.7143|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.7143|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.7143|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.7143|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:03:48.7143|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:03:48.7143|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:03:48.7143|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:48.7143|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:48.7516|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:03:48.7516|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:03:48.7516|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.7516|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:03:48.7516|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.7516|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:03:48.7516|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.7516|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.7516|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:03:48.7516|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:48.7516|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:48.7516|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:48.7516|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:03:48.7735|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:48.7735|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.7824|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:03:48.7824|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:03:48.7824|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:03:48.7824|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:03:48.7824|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:03:48.8157|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:03:48.8157|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:03:48.8157|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 100.7835ms 
2025-10-01 16:03:48.8157|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 100.6220ms 
2025-10-01 16:03:48.8157|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:03:48.8157|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 3 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:03:48.8157|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:03:48.8157|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:03:48.8157|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 102.7523ms 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8349|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:03:48.8386|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:03:48.8386|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 125.2456ms 
2025-10-01 16:03:48.8861|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:48.8861|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:03:48.8861|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:48.8861|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:03:48.8861|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:03:48.8861|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:48.8861|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:48.8861|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:48.8861|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:49.1633|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 16:03:49.1633|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:03:49.1633|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:03:49.1633|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:03:49.1633|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:03:49.1633|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:49.1668|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:03:49.1668|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:49.1668|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:03:49.1668|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:03:49.1668|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:49.1668|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:49.1668|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:49.1668|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:49.1668|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:49.1668|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:03:49.1668|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 285.5794ms 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:03:49.2086|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:03:49.2086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:03:49.2086|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 42.6223ms 
2025-10-01 16:03:51.7495|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TBQVKH6J" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:03:51.7495|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:03:51.7495|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:03:51.7495|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:03:51.7495|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:03:51.7495|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:03:51.7495|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:03:51.7495|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:03:51.7495|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:03:51.7896|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:03:51.7896|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:03:51.7896|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:03:51.7896|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:03:51.7896|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:03:51.7896|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:03:51.7923|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:03:51.9300|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:03:53.2090|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:03:53.2090|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:03:53.2138|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:03:53.2138|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:03:53.2138|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:03:53.2296|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:03:54.0819|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:03:54.0819|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:03:54.0819|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:03:54.4064|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:03:54.5158|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:03:54.5998|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:03:54.7094|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:03:54.7094|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:03:55.0829|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:03:55.1379|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:03:55.1679|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (30ms). 
2025-10-01 16:03:55.1679|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.4158|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.4186|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:03:55.4186|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 16:03:55.4186|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 16:03:55.4351|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:03:55.4834|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (46ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:03:55.5386|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.5898|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.5898|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6311|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6363|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6590|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.6672|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.6672|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 185ms reading results. 
2025-10-01 16:03:55.6868|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.7003|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (12ms). 
2025-10-01 16:03:55.7003|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:03:55.7003|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:03:55.7003|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:03:55.7217|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:03:55.7217|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.7695|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.7695|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:03:55.7695|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:03:55.7695|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:03:55.7695|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:03:55.7900|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:03:55.8031|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8031|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:03:55.8152|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.8152|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 25ms reading results. 
2025-10-01 16:03:55.8152|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:03:55.8152|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:04:27.4830|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:04:27.7296|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:04:28.3150|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:04:28.4255|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:04:28.4589|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:04:28.4691|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:04:28.4691|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:04:28.4807|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:04:28.4807|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:04:28.4978|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:04:28.4978|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:04:28.4978|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:04:28.4978|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:04:28.4978|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:04:28.4978|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:04:28.5142|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:04:28.5142|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:04:28.5142|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:04:28.5142|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:04:28.5142|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:04:28.5855|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:04:28.5855|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:04:28.5971|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:04:28.7122|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:04:28.7122|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:04:28.7122|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:04:28.7122|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:04:28.7122|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:04:28.7122|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:04:28.7245|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:04:28.7245|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:04:28.7639|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:04:28.7639|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:04:28.7639|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:04:28.7639|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:04:32.9985|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TC8AGVN5" accepted. 
2025-10-01 16:04:32.9985|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TC8AGVN5" started. 
2025-10-01 16:04:33.0589|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TC8AGVN5 established using the following protocol: Tls13 
2025-10-01 16:04:33.0831|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:04:33.0831|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:04:33.0831|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:04:33.0831|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:04:33.0883|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:04:33.0883|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 1 with length 514 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.1086|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:04:33.1278|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:04:33.2574|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:33.3176|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:04:33.3176|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:04:33.3176|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:04:33.3176|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:33.4147|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:33.4176|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:04:33.4886|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:04:33.4886|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:04:33.4886|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:04:33.4950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:04:33.4950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:04:33.4950|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:04:33.4950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:04:33.4950|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:04:33.4950|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:04:33.4950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:04:33.4950|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 383.4198ms 
2025-10-01 16:04:33.5112|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 3 with length 97 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.5112|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 5 with length 52 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.5112|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.5112|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.5112|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:04:33.5112|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:04:33.5112|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:04:33.5112|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:33.5112|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:33.5112|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:04:33.5445|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.5445|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:04:33.5445|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.5445|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:04:33.5445|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.5445|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:04:33.5445|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.5445|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:04:33.5445|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:33.5445|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:33.5445|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:33.5445|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:04:33.6116|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:33.6116|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.6232|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 3 with length 60 and flags END_HEADERS. 
2025-10-01 16:04:33.6232|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 16:04:33.6232|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 16:04:33.6232|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:04:33.6232|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:04:33.6232|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:04:33.6232|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:04:33.6232|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 116.8998ms 
2025-10-01 16:04:33.6232|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 116.8089ms 
2025-10-01 16:04:33.6232|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 5 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:04:33.6849|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:04:33.6849|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:04:33.6849|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 16:04:33.6849|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 174.0262ms 
2025-10-01 16:04:33.6849|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 9 with length 149 and flags END_HEADERS. 
2025-10-01 16:04:33.6849|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:04:33.6991|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:04:33.6991|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 187.7213ms 
2025-10-01 16:04:33.7506|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:33.7506|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:04:33.7506|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:33.7506|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:04:33.7506|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:04:33.7506|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:33.7506|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:33.7506|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:33.7506|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:34.0080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 16:04:34.0080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:04:34.0116|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:34.0116|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:34.0116|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:04:34.0116|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:34.0116|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:04:34.0116|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:04:34.0116|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:34.0116|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:34.0116|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:34.0116|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:34.0116|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:04:34.0116|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 264.6036ms 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:04:34.0732|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:04:34.0732|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:04:34.0732|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 61.4585ms 
2025-10-01 16:04:37.4312|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TC8AGVN5" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:04:37.4312|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:04:37.4323|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:04:37.4323|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:04:37.4323|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:04:37.4323|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:04:37.4323|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:04:37.4323|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:04:37.4323|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:04:37.4682|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:04:37.4682|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:04:37.6624|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:04:38.8021|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:04:38.8021|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:04:38.8021|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:04:38.8021|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:04:38.8021|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:04:38.8203|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:04:39.6335|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:04:39.6335|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:04:39.6335|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:04:39.8995|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:04:39.9856|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:04:40.0557|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:04:40.1706|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:04:40.1706|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:04:40.6620|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:04:40.7214|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:04:40.7515|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (31ms). 
2025-10-01 16:04:40.7515|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:40.9897|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:40.9897|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:04:41.0012|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (2ms). 
2025-10-01 16:04:41.0012|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:04:41.0012|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:04:41.0737|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (62ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:04:41.1284|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.2140|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.2140|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.2739|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.2806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.3095|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.3095|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 237ms reading results. 
2025-10-01 16:04:41.3095|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.3318|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (9ms). 
2025-10-01 16:04:41.3318|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:04:41.3318|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:04:41.3318|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:04:41.3494|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:04:41.3563|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.4033|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.4033|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:04:41.4033|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:04:41.4033|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:04:41.4033|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:04:41.4033|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:04:41.4216|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4216|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:04:41.4342|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.4342|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 20ms reading results. 
2025-10-01 16:04:41.4342|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:04:41.4342|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:05:26.1372|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:05:26.4220|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:05:26.8958|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:05:26.9434|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:05:26.9677|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:05:26.9677|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:05:26.9677|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:05:26.9813|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:05:26.9813|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:05:26.9813|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:05:26.9813|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:05:26.9813|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:05:27.0002|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:05:27.0002|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:05:27.0002|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:05:27.0002|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:05:27.0002|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:05:27.0002|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:05:27.0002|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:05:27.0002|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:05:27.0570|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:05:27.0570|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:05:27.0651|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:05:27.2011|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:05:27.2011|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:05:27.2011|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:05:27.2011|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:05:27.2011|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:05:27.2011|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:05:27.2137|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:05:27.2137|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:05:27.2463|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:05:27.2463|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:05:27.2463|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:05:27.2463|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:05:32.4902|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TCQ1SC9G" accepted. 
2025-10-01 16:05:32.4902|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TCQ1SC9G" started. 
2025-10-01 16:05:32.5648|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TCQ1SC9G established using the following protocol: Tls13 
2025-10-01 16:05:32.5918|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:05:32.5918|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:05:32.5918|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:05:32.5918|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:05:32.5918|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:05:32.5918|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:05:32.6225|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TCQ1SC9G" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:05:32.6446|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:05:32.6572|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:05:32.7292|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:05:32.7292|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:05:32.7292|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:05:32.7292|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:05:32.8842|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:05:32.8889|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:05:32.9503|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:05:32.9503|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:05:33.1124|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:05:34.4672|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:05:34.4672|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:05:34.4672|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:05:34.4672|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:05:34.4672|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:05:34.4799|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:05:35.1471|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:05:35.1471|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:05:35.1471|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:05:35.4366|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:05:35.5818|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:05:35.6999|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:05:35.7944|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:05:35.7944|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:05:36.1489|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:05:36.1874|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:05:36.2083|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (16ms). 
2025-10-01 16:05:36.2083|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.4745|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.4745|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:05:36.4869|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (4ms). 
2025-10-01 16:05:36.4869|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (10ms). 
2025-10-01 16:05:36.4987|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:05:36.5738|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (72ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:05:36.6237|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.6971|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7079|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7608|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7608|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7884|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.7972|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.7972|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 223ms reading results. 
2025-10-01 16:05:36.8081|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.8081|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (7ms). 
2025-10-01 16:05:36.8081|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:05:36.8081|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:05:36.8081|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:05:36.8379|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:05:36.8433|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.8911|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.8911|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:05:36.8911|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:05:36.8911|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:05:36.8911|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:05:36.9166|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:05:36.9166|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9166|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:05:36.9511|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.9511|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 35ms reading results. 
2025-10-01 16:05:36.9511|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:05:36.9511|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:06:27.2854|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:06:27.5621|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:06:28.0863|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:06:28.1858|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:06:28.2478|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:06:28.2648|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:06:28.2648|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:06:28.2819|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:06:28.2819|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:06:28.3014|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:06:28.3070|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:06:28.3070|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:06:28.3070|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:06:28.3070|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:06:28.3070|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:06:28.3225|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:06:28.3225|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:06:28.3225|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:06:28.3225|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:06:28.3225|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:06:28.4347|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:06:28.4347|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:06:28.4514|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:06:28.5961|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:06:28.5961|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:06:28.6043|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:06:28.6043|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:06:28.6043|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:06:28.6043|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:06:28.6043|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:06:28.6043|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:06:28.6835|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:06:28.6835|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:06:28.6835|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:06:28.6835|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:06:30.7966|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TDBDU4HO" accepted. 
2025-10-01 16:06:30.7966|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TDBDU4HO" started. 
2025-10-01 16:06:30.8557|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TDBDU4HO established using the following protocol: Tls13 
2025-10-01 16:06:30.8912|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:06:30.8912|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:06:30.9020|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:06:30.9020|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:06:30.9020|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:06:30.9020|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:06:30.9289|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:06:30.9544|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:06:30.9695|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:06:31.0422|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:06:31.0422|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:06:31.0422|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:06:31.0422|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:06:31.1259|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:06:31.1259|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:06:31.1707|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:06:31.1707|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:06:31.3456|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:06:32.6747|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:06:32.6747|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:06:32.6747|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:06:32.6747|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:06:32.6747|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:06:32.6894|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:06:33.4038|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:06:33.4038|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:06:33.4038|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:06:33.6959|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:06:33.8115|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:06:33.9043|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:06:34.0737|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:06:34.0737|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:06:34.6906|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:06:34.7791|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:06:34.8043|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (22ms). 
2025-10-01 16:06:34.8073|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.0215|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.0215|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:06:35.0325|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 16:06:35.0325|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:06:35.0424|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:06:35.0968|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (54ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:06:35.1568|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2148|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2148|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2622|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2622|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2918|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2918|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.2923|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.2923|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 202ms reading results. 
2025-10-01 16:06:35.3106|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.3106|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (8ms). 
2025-10-01 16:06:35.3240|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:06:35.3240|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:06:35.3240|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:06:35.3505|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:06:35.3578|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.3971|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.3971|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:06:35.3971|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:06:35.3971|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:06:35.3971|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:06:35.4081|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:06:35.4222|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4222|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:06:35.4415|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.4415|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 34ms reading results. 
2025-10-01 16:06:35.4415|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:35.4415|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:06:41.0868|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:06:41.0868|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:06:41.0868|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:06:41.0881|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:06:41.0881|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 9917.6619ms 
2025-10-01 16:06:41.0881|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:06:41.1674|0|ERROR|LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare|_ WHAT HAVE YOU DONE!!! System.IO.FileNotFoundException: Could not find the PDF HTML template.
File name: 'C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem\bin\Debug\net9.0\LibrarymanagementSystem.Utiles\HTML\PdfHtmlBuilder.html'
   at LibraryManagementSystem.API.Helpers.PdfHtmlBuilder.BuildHtml(List`1 active, List`1 returned) in C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem\Services\PdfHtmlBuilder.cs:line 20
   at LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright() in C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem\Controllers\ReportsController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare.InvokeAsync(HttpContext context, RequestDelegate next) in C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem\Exceptions\GlobalExceptionHandler.cs:line 21
2025-10-01 16:06:41.1876|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending HEADERS frame for stream ID 1 with length 59 and flags END_HEADERS. 
2025-10-01 16:06:41.1876|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 16:06:41.1876|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:06:41.1876|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 16:06:41.1876|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:06:41.1876|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:06:41.1876|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (0ms). 
2025-10-01 16:06:41.1876|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 500 - application/json 10252.4565ms 
2025-10-01 16:06:42.1513|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TDBDU4HO" received FIN. 
2025-10-01 16:06:42.1513|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" is closed. The last processed stream ID was 1. 
2025-10-01 16:06:42.1513|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDBDU4HO" sending GOAWAY frame for stream ID 0 with length 8 and flags 0x0. 
2025-10-01 16:06:42.1979|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0TDBDU4HO" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:06:42.1997|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0TDBDU4HO completed. 
2025-10-01 16:06:42.1997|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TDBDU4HO" stopped. 
2025-10-01 16:06:53.6955|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:06:54.0429|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:06:54.5086|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:06:54.5933|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:06:54.6307|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:06:54.6424|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:06:54.6424|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:06:54.6424|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:06:54.6424|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:06:54.6699|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:06:54.6699|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:06:54.6699|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:06:54.6699|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:06:54.6830|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:06:54.6830|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:06:54.6830|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:06:54.6830|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:06:54.6830|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:06:54.6830|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:06:54.6830|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:06:54.7742|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:06:54.7742|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:06:54.7825|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:06:54.8585|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:06:54.8585|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:06:54.8585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:06:54.8585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:06:54.8585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:06:54.8585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:06:54.8701|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:06:54.8701|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:06:54.9035|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:06:54.9035|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:06:54.9035|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:06:54.9035|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:07:24.9207|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TDRI3EMO" accepted. 
2025-10-01 16:07:24.9600|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TDRI3EMO" started. 
2025-10-01 16:07:25.0468|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TDRI3EMO established using the following protocol: Tls13 
2025-10-01 16:07:25.0716|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:07:25.0772|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:07:25.0772|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:07:25.0772|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:07:25.0772|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:07:25.0772|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:07:25.1017|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TDRI3EMO" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:07:25.1202|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:07:25.1202|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:07:25.1840|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:07:25.1840|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:07:25.1840|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:07:25.1840|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:07:25.2522|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:07:25.2522|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:07:25.2919|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:07:25.2919|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:07:25.4401|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:07:26.7838|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:07:26.7838|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:07:26.7838|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:07:26.7838|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:07:26.7838|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:07:26.8125|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:07:27.6114|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:07:27.6114|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:07:27.6114|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:07:27.8495|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:07:27.9474|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:07:28.0297|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:07:28.1383|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:07:28.1383|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:07:28.7119|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:07:28.7708|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:07:28.7962|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (18ms). 
2025-10-01 16:07:28.7962|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.1015|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.1055|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:07:29.1055|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (3ms). 
2025-10-01 16:07:29.1055|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 16:07:29.1055|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:07:29.1729|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (50ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:07:29.2126|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.2548|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.2600|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3082|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3082|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.3294|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.3413|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 162ms reading results. 
2025-10-01 16:07:29.3413|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.3413|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (5ms). 
2025-10-01 16:07:29.3627|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:07:29.3627|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:07:29.3627|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:07:29.3763|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:07:29.3763|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.3916|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.3916|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:07:29.3916|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:07:29.3916|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:07:29.3916|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:07:29.3916|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:07:29.4066|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4066|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:07:29.4189|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.4189|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 22ms reading results. 
2025-10-01 16:07:29.4189|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:07:29.4189|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:13:43.5666|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:13:44.7020|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:13:45.9515|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:13:46.1734|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:13:46.2292|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:13:46.2519|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:13:46.2679|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:13:46.2871|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:13:46.2961|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:13:46.3254|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:13:46.3254|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:13:46.3254|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:13:46.3425|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:13:46.3573|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:13:46.3573|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:13:46.3573|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:13:46.3573|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:13:46.3875|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:13:46.3927|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:13:46.3927|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:13:46.5589|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:13:46.5638|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:13:46.5857|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:13:46.9306|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:13:46.9539|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:13:46.9539|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:13:46.9539|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:13:46.9539|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:13:46.9539|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:13:46.9777|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:13:46.9809|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:13:47.0689|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:13:47.0941|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:13:47.0941|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:13:47.0941|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:13:49.6043|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0THE6NDST" accepted. 
2025-10-01 16:13:49.6049|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0THE6NDST" started. 
2025-10-01 16:13:49.7765|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0THE6NDST established using the following protocol: Tls13 
2025-10-01 16:13:49.8897|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:13:49.9080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:13:49.9080|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:13:49.9080|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:13:49.9080|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:13:49.9080|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:49.9615|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:13:50.0283|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:13:50.4572|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:50.5884|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:13:50.5898|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:13:50.5898|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:13:50.5898|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:50.8456|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:50.8456|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:13:51.0323|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:13:51.0323|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:13:51.0323|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:13:51.0480|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:13:51.0597|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:13:51.0597|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 16:13:51.0597|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 16:13:51.0597|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:13:51.0597|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:13:51.0597|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:13:51.0597|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:13:51.0747|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 1066.6943ms 
2025-10-01 16:13:51.0747|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 3 with length 145 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:51.0747|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 5 with length 89 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:51.0747|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 7 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:51.0747|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:13:51.0747|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:13:51.0747|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:13:51.0747|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:51.0905|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.0905|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.0905|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.0905|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.0905|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:51.0905|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:51.0905|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.0905|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 9 with length 36 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:51.1414|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:13:51.1414|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:51.1414|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:13:51.1414|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:13:51.1414|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:13:51.1414|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:13:51.1414|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:51.1972|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:51.1972|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:13:51.2223|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 3 with length 60 and flags END_HEADERS. 
2025-10-01 16:13:51.2223|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 16:13:51.2223|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 16:13:51.2223|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:13:51.2223|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:13:51.2223|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:13:51.2223|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:13:51.2223|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 141.2013ms 
2025-10-01 16:13:51.2223|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 86.4557ms 
2025-10-01 16:13:51.2357|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 5 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:13:51.2798|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 9 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:13:51.2798|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:13:51.2798|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 199.0543ms 
2025-10-01 16:13:51.2798|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 7 with length 119 and flags END_HEADERS. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 9986 and flags NONE. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3447|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 10240 and flags NONE. 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 1806 and flags NONE. 
2025-10-01 16:13:51.3569|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 275.7506ms 
2025-10-01 16:13:51.3569|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 7 with length 0 and flags END_STREAM. 
2025-10-01 16:13:51.7259|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:51.7259|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:13:51.7259|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:51.7259|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:13:51.7259|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:13:51.7259|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:51.7259|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:51.7296|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:51.7296|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:52.4193|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:13:52.4193|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:13:52.4193|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:13:52.4193|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:13:52.4193|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:13:52.4193|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:52.4193|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:52.4193|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:13:52.4193|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:52.4325|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:13:52.4325|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:13:52.4325|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:52.4325|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:52.4325|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:52.4325|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:52.4325|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:13:52.4325|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 716.5224ms 
2025-10-01 16:13:52.6036|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:13:52.6036|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:13:52.6036|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:13:52.6036|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:13:52.6040|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:13:52.6040|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:13:52.6040|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:13:52.6040|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 177.5620ms 
2025-10-01 16:13:56.0319|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0THE6NDST" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:13:56.0319|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:13:56.0319|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:13:56.0319|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:13:56.0319|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:13:56.0319|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:13:56.0319|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:13:56.0319|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:13:56.0319|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:13:56.1305|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:13:56.1305|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:13:56.1369|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:13:56.1369|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:13:56.1369|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:13:56.1369|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:13:56.1369|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:13:56.5629|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:14:00.2135|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:14:00.2142|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:14:00.2142|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:14:00.2142|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:14:00.2142|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:14:00.2454|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:14:01.9929|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:14:01.9929|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:14:01.9929|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:14:02.6331|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:14:02.9148|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:14:03.1262|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:14:03.4261|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:14:03.4261|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:14:04.3356|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:14:04.4801|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:14:04.5444|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (67ms). 
2025-10-01 16:14:04.5529|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:05.3795|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:05.3939|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:14:05.4283|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (22ms). 
2025-10-01 16:14:05.4283|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (41ms). 
2025-10-01 16:14:05.4587|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:14:05.6314|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (171ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:14:05.7493|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:05.8945|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:05.9129|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.0619|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.0823|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1440|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.1626|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.1849|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 533ms reading results. 
2025-10-01 16:14:06.1933|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.2141|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (20ms). 
2025-10-01 16:14:06.2236|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:14:06.2236|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:14:06.2236|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:14:06.2724|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:14:06.2934|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.3582|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.3582|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:14:06.3582|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:14:06.3582|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:14:06.3582|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:14:06.3915|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:14:06.4107|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4107|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:14:06.4398|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.4398|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 48ms reading results. 
2025-10-01 16:14:06.4398|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:14:06.4398|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:17:34.9558|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:17:35.1937|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:17:35.7571|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:17:35.8466|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:17:35.8834|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:17:35.8950|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:17:35.8950|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:17:35.8950|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:17:35.9129|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:17:35.9251|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:17:35.9251|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:17:35.9251|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:17:35.9251|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:17:35.9364|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:17:35.9364|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:17:35.9364|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:17:35.9364|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:17:35.9364|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:17:35.9364|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:17:35.9364|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:17:36.0311|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:17:36.0311|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:17:36.0483|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:17:36.1708|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:17:36.1708|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:17:36.1708|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:17:36.1708|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:17:36.1708|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:17:36.1708|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:17:36.1910|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:17:36.1910|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:17:36.2702|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:17:36.2702|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:17:36.2702|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:17:36.2702|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:17:39.6734|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TJIOQTL7" accepted. 
2025-10-01 16:17:39.6734|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TJIOQTL7" started. 
2025-10-01 16:17:39.8424|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TJIOQTL7 established using the following protocol: Tls13 
2025-10-01 16:17:39.9086|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:17:39.9270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:17:39.9270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:17:39.9270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:17:39.9270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:17:39.9270|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:17:40.0064|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TJIOQTL7" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:17:40.0715|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:17:40.1031|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:17:40.2442|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:17:40.2451|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:17:40.2451|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:17:40.2451|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:17:40.4549|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:17:40.4665|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:17:40.5589|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:17:40.5589|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:17:40.9743|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:17:43.9231|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:17:43.9231|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:17:43.9231|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:17:43.9231|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:17:43.9231|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:17:43.9529|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:17:45.6010|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:17:45.6010|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:17:45.6010|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:17:46.2704|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:17:46.5547|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:17:46.7761|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:17:47.1172|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:17:47.1225|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:17:48.1577|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:17:48.3138|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:17:48.3873|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (60ms). 
2025-10-01 16:17:48.3873|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:49.1030|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:49.1117|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:17:49.1336|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:17:49.1399|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (28ms). 
2025-10-01 16:17:49.1617|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:17:49.3411|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (174ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:17:49.4676|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.6352|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.6548|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.8176|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.8376|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:49.9255|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:49.9528|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 586ms reading results. 
2025-10-01 16:17:49.9528|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:49.9797|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (19ms). 
2025-10-01 16:17:49.9862|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:17:49.9862|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:17:49.9862|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:17:50.0329|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:17:50.0463|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:50.0915|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:50.0915|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:17:50.0915|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:17:50.0915|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:17:50.0915|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:17:50.1338|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:17:50.1577|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1577|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:17:50.1916|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:50.1916|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 59ms reading results. 
2025-10-01 16:17:50.1916|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:17:50.1916|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:36:48.0731|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:36:48.9738|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:36:50.7196|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:36:50.9532|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:36:51.0713|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:36:51.1169|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:36:51.1611|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:36:51.1826|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:36:51.2043|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:36:51.2368|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:36:51.2368|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:36:51.2522|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:36:51.2522|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:36:51.2665|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:36:51.2665|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:36:51.2665|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:36:51.2665|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:36:51.2933|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:36:51.2933|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:36:51.2933|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:36:51.5940|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:36:51.5940|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:36:51.6423|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:36:51.9011|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:36:51.9014|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:36:51.9014|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:36:51.9014|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:36:51.9014|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:36:51.9014|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:36:51.9212|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:36:51.9212|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:36:51.9982|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:36:51.9982|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:36:51.9982|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:36:51.9982|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:36:54.9477|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TUB2CJDR" accepted. 
2025-10-01 16:36:54.9486|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TUB2CJDR" started. 
2025-10-01 16:36:55.1420|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TUB2CJDR established using the following protocol: Tls13 
2025-10-01 16:36:55.2280|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:36:55.2455|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:36:55.2464|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:36:55.2464|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:36:55.2464|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:36:55.2464|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:55.2947|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:36:55.3691|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:36:55.7068|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:36:55.8479|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:36:55.8479|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:36:55.8479|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:36:55.8566|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:36:56.0973|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:36:56.1055|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:36:56.2805|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:36:56.2805|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:36:56.2805|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:36:56.2962|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:36:56.2962|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:36:56.2962|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 16:36:56.2962|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 16:36:56.2962|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:36:56.2962|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:36:56.2962|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:36:56.3120|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:36:56.3252|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 965.9838ms 
2025-10-01 16:36:56.3549|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 3 with length 144 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:56.3578|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:56.3578|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:56.3578|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:36:56.3578|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:36:56.3578|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:36:56.3578|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:36:56.3578|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:36:56.3578|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.3578|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:36:56.3578|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:36:56.3578|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.3578|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:36:56.3578|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.3578|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:36:56.3578|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.3578|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:36:56.3578|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:36:56.3578|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:36:56.3578|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.4016|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:36:56.4016|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:36:56.4458|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:36:56.4458|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:36:56.4458|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:36:56.4458|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:36:56.4458|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 87.7770ms 
2025-10-01 16:36:56.4458|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:36:56.4458|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 88.6768ms 
2025-10-01 16:36:56.4458|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 3 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:36:56.4489|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:36:56.4489|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:36:56.4489|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:36:56.4489|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:56.4489|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:36:56.4787|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:36:56.4812|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:36:56.4812|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 122.3267ms 
2025-10-01 16:36:56.5562|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:36:56.5562|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:36:56.5562|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:36:56.5618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:36:56.5618|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 115.1711ms 
2025-10-01 16:36:57.1858|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:57.1858|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:36:57.1858|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:36:57.1858|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:36:57.1858|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:36:57.1858|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.1858|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:36:57.1858|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:36:57.1858|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.8529|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:36:57.8529|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:36:57.8529|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:36:57.8529|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:36:57.8529|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:36:57.8529|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:36:57.8529|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:36:57.8529|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:36:57.8529|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:36:57.8529|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:36:57.8529|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.8529|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:36:57.8529|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:36:57.8529|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.8610|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.8610|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:36:57.8610|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 679.4304ms 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending HEADERS frame for stream ID 13 with length 34 and flags END_HEADERS. 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:36:57.9671|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:36:57.9671|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:36:57.9671|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 112.0597ms 
2025-10-01 16:37:00.7475|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TUB2CJDR" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:37:00.7475|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:37:00.7475|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:37:00.7475|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:37:00.7475|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:37:00.7475|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:37:00.7475|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:37:00.7475|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:37:00.7475|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:37:00.8882|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:37:00.8882|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:37:01.3861|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:37:04.5560|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:37:04.5593|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:37:04.5593|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:37:04.5593|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:37:04.5593|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:37:04.5845|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:37:06.2983|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:37:06.2983|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:37:06.2983|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:37:06.9629|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:37:07.2809|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:37:07.5088|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:37:07.7826|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:37:07.7826|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:37:08.6557|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:37:08.7943|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:37:08.8737|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (82ms). 
2025-10-01 16:37:08.8737|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:09.5943|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:09.5943|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:37:09.6268|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (12ms). 
2025-10-01 16:37:09.6268|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (30ms). 
2025-10-01 16:37:09.6532|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:37:09.8147|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (157ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:37:09.9296|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.0706|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.0863|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2168|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2329|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.2943|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.3310|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 497ms reading results. 
2025-10-01 16:37:10.3310|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.3584|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (18ms). 
2025-10-01 16:37:10.3584|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:37:10.3584|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:37:10.3584|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:37:10.3956|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:37:10.4059|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.4983|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.4983|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:37:10.4983|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:37:10.4983|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:37:10.4983|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:37:10.5190|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:37:10.5413|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5413|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:37:10.5774|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.5774|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 59ms reading results. 
2025-10-01 16:37:10.5774|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:37:10.5774|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:38:46.2521|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:38:46.4965|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:38:47.2697|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:38:47.4226|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:38:47.4788|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:38:47.4970|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:38:47.4970|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:38:47.5140|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:38:47.5140|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:38:47.5465|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:38:47.5465|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:38:47.5603|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:38:47.5603|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:38:47.5603|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:38:47.5748|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:38:47.5748|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:38:47.5748|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:38:47.5929|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:38:47.5929|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:38:47.5929|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:38:47.7196|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:38:47.7221|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:38:47.7394|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:38:47.9364|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:38:47.9486|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:38:47.9495|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:38:47.9495|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:38:47.9495|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:38:47.9495|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:38:47.9495|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:38:47.9495|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:38:48.0612|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:38:48.0612|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:38:48.0612|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:38:48.0612|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:38:52.4971|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TVE3DOV5" accepted. 
2025-10-01 16:38:52.4971|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0TVE3DOV5" started. 
2025-10-01 16:38:52.6563|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0TVE3DOV5 established using the following protocol: Tls13 
2025-10-01 16:38:52.7268|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:38:52.7453|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:38:52.7453|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:38:52.7477|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:38:52.7477|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:38:52.7477|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:52.8054|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:38:52.8522|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:38:53.1490|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:53.2928|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:38:53.2928|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:38:53.2928|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:38:53.2928|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:53.4893|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:53.4971|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:38:53.6330|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:38:53.6330|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:38:53.6426|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:38:53.6511|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:38:53.6511|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:38:53.6511|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 16:38:53.6511|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 16:38:53.6511|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:38:53.6511|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:38:53.6511|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:38:53.6689|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:38:53.6689|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 842.5065ms 
2025-10-01 16:38:53.6988|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 3 with length 144 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:53.7005|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:53.7005|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:53.7005|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:38:53.7005|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:38:53.7005|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:38:53.7005|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:53.7005|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:53.7005|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:38:53.7005|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.7005|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.7005|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:38:53.7005|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.7005|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:38:53.7005|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:38:53.7005|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.7005|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:53.7005|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:53.7005|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:53.7445|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.7978|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:53.7978|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:38:53.8318|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:38:53.8318|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:38:53.8318|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:38:53.8318|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:38:53.8318|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:38:53.8318|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:38:53.8318|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 131.7014ms 
2025-10-01 16:38:53.8318|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 132.2315ms 
2025-10-01 16:38:53.8318|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:38:53.8318|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:38:53.8318|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:38:53.8318|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:38:53.8414|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 140.0257ms 
2025-10-01 16:38:53.8414|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:38:53.8414|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:53.8414|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:38:53.9280|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 9 with length 149 and flags END_HEADERS. 
2025-10-01 16:38:53.9280|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:38:53.9280|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:38:53.9356|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:38:53.9356|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 102.5166ms 
2025-10-01 16:38:54.0330|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:54.0330|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:38:54.0330|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:54.0330|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:38:54.0330|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:38:54.0330|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.0330|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:54.0330|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:54.0330|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.6960|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 11 with length 35 and flags END_HEADERS. 
2025-10-01 16:38:54.6960|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:38:54.6960|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:38:54.6980|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:38:54.6980|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:38:54.6980|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:54.6980|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:38:54.6980|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:54.6980|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:38:54.6980|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:38:54.6980|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.6980|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:54.6980|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:54.6980|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.6980|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.6980|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 679.3742ms 
2025-10-01 16:38:54.6980|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending HEADERS frame for stream ID 13 with length 34 and flags END_HEADERS. 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:38:54.8675|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:38:54.8675|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 165.6772ms 
2025-10-01 16:38:54.8675|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:38:57.8269|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0TVE3DOV5" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:38:57.8269|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:38:57.8269|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:38:57.8269|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:38:57.8269|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:38:57.8269|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:38:57.8269|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:38:57.8269|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:38:57.8269|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:38:57.9317|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:38:57.9364|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:38:58.2898|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:39:01.2375|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:39:01.2375|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:39:01.2483|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:39:01.2483|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:39:01.2483|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:39:01.2697|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:39:02.9507|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:39:02.9507|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:39:02.9507|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:39:03.5149|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:39:03.7773|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:39:03.9606|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:39:04.2666|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:39:04.2666|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:39:05.1258|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:39:05.2389|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:39:05.2858|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (47ms). 
2025-10-01 16:39:05.2959|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:05.8982|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:05.9077|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:39:05.9303|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:39:05.9365|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (29ms). 
2025-10-01 16:39:05.9696|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:39:06.1575|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (188ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:39:06.2878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.4509|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.4693|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.5997|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6177|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6806|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.6981|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.7208|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 544ms reading results. 
2025-10-01 16:39:06.7208|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.7507|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (20ms). 
2025-10-01 16:39:06.7507|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:39:06.7507|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:39:06.7507|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:39:06.7878|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:39:06.8007|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.8276|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.8276|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:39:06.8276|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:39:06.8276|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:39:06.8276|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:39:06.8535|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:39:06.8720|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8720|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:39:06.8984|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.8984|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 45ms reading results. 
2025-10-01 16:39:06.8984|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:39:06.8984|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:39:16.6355|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:39:16.9262|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:39:17.5270|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:39:17.8181|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:39:17.8757|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:39:17.9027|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:39:17.9027|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:39:17.9278|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:39:17.9391|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:39:17.9639|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:39:17.9639|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:39:17.9751|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:39:17.9751|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:39:17.9856|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:39:17.9856|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:39:17.9856|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:39:17.9856|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:39:18.0043|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:39:18.0043|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:39:18.0043|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:39:18.1436|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:39:18.1436|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:39:18.1539|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:39:18.2524|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:39:18.2524|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:39:18.2524|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:39:18.2524|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:39:18.2524|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:39:18.2524|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:39:18.2690|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:39:18.2690|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:39:18.3490|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:39:18.3490|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:39:18.3490|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:39:18.3490|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:40:29.9086|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:40:30.2278|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:40:31.0368|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:40:31.2494|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:40:31.3388|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:40:31.3701|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:40:31.3844|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:40:31.4055|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:40:31.4216|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:40:31.4600|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:40:31.4700|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:40:31.4700|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:40:31.4834|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:40:31.4834|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:40:31.4834|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:40:31.4834|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:40:31.5017|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:40:31.5260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:40:31.5260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:40:31.5260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:40:31.7323|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:40:31.7323|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:40:31.7610|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:40:32.0991|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:40:32.1208|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:40:32.1208|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:40:32.1208|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:40:32.1208|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:40:32.1208|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:40:32.1440|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:40:32.1440|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:40:32.2657|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:40:32.2657|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:40:32.2657|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:40:32.2657|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:40:33.6592|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U0C8669P" accepted. 
2025-10-01 16:40:33.6592|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U0C8669P" started. 
2025-10-01 16:40:33.8238|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U0C8669P established using the following protocol: Tls13 
2025-10-01 16:40:33.8963|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:40:33.9199|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:40:33.9199|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:40:33.9227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:40:33.9227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:40:33.9227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:33.9702|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:40:34.0155|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:40:34.2845|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:34.3837|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:40:34.3837|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:40:34.3837|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:40:34.3837|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:34.5996|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:34.6077|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:40:34.7889|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:40:34.7956|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:40:34.7956|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:40:34.8079|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:40:34.8079|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:40:34.8079|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:40:34.8079|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:40:34.8079|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:40:34.8079|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:40:34.8079|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:40:34.8286|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 828.4002ms 
2025-10-01 16:40:34.8286|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 3 with length 145 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:34.8401|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 5 with length 52 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:34.8401|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:34.8401|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:40:34.8401|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:40:34.8401|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:40:34.8401|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:34.8401|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:34.8401|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:40:34.8401|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.8401|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:40:34.8401|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.8401|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:40:34.8401|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.8401|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.8401|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:40:34.8401|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:34.8401|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:34.8401|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:34.8401|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:40:34.9683|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:34.9683|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.9973|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:40:34.9973|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:40:34.9973|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:40:34.9973|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:40:34.9973|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 157.9322ms 
2025-10-01 16:40:34.9973|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 157.7128ms 
2025-10-01 16:40:34.9973|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:40:34.9973|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 5 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:40:35.0266|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:35.0266|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:40:35.0266|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 3 with length 60 and flags END_HEADERS. 
2025-10-01 16:40:35.0266|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 3 with length 16384 and flags NONE. 
2025-10-01 16:40:35.0266|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 3 with length 155 and flags NONE. 
2025-10-01 16:40:35.0433|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:40:35.0594|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 218.8348ms 
2025-10-01 16:40:35.0594|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 16:40:35.1331|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:35.1331|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:40:35.1331|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:35.1331|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:40:35.1396|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:40:35.1396|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.1396|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:35.1396|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:35.1396|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.2682|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 9 with length 149 and flags END_HEADERS. 
2025-10-01 16:40:35.2682|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:40:35.2682|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.2767|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.2767|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.2767|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.2767|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.2767|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3387|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3387|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3387|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:40:35.3387|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 314.1904ms 
2025-10-01 16:40:35.3387|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 9 with length 1806 and flags END_STREAM. 
2025-10-01 16:40:35.8488|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:40:35.8488|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:40:35.8488|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:40:35.8488|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:40:35.8488|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:40:35.8673|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:35.8673|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:40:35.8673|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:35.8673|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:40:35.8673|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:40:35.8673|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.8673|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:35.8673|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:35.8673|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.8673|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.8739|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 739.9299ms 
2025-10-01 16:40:35.8739|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:40:35.9884|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:40:35.9884|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:40:35.9884|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 122.2733ms 
2025-10-01 16:40:41.0941|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0C8669P" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:40:41.0941|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:40:41.0941|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:40:41.0941|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:40:41.0941|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:40:41.0941|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:40:41.0941|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:40:41.0941|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:40:41.0941|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:40:41.1829|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:40:41.1829|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:40:41.5273|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:40:44.2990|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:40:44.2990|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:40:44.2990|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:40:44.2990|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:40:44.2990|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:40:44.3428|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:40:46.0307|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:40:46.0339|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:40:46.0339|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:40:46.7058|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:40:46.9870|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:40:47.1808|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:40:47.4210|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:40:47.4210|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:40:48.3593|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:40:48.4893|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:40:48.5515|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (65ms). 
2025-10-01 16:40:48.5515|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:49.1143|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:49.1228|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:40:49.1475|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (9ms). 
2025-10-01 16:40:49.1548|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (31ms). 
2025-10-01 16:40:49.1845|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:40:49.3508|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (166ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:40:49.4846|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.6549|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.6743|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.8235|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.8409|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9097|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:49.9325|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:49.9611|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 586ms reading results. 
2025-10-01 16:40:49.9727|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:49.9950|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (24ms). 
2025-10-01 16:40:50.0037|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:40:50.0037|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:40:50.0037|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:40:50.0479|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:40:50.0669|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:50.0946|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:50.0946|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:40:50.0946|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:40:50.0946|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:40:50.0946|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:40:50.1193|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:40:50.1430|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1430|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:40:50.1820|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:50.1820|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 63ms reading results. 
2025-10-01 16:40:50.1820|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:40:50.1845|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:41:15.1888|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:41:15.5733|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:41:16.5114|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:41:16.6498|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:41:16.7203|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:41:16.7378|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:41:16.7378|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:41:16.7518|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:41:16.7518|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:41:16.7652|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:41:16.7652|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:41:16.7652|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:41:16.7652|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:41:16.7915|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:41:16.7915|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:41:16.7915|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:41:16.7915|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:41:16.8115|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:41:16.8115|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:41:16.8115|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:41:16.9979|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:41:16.9979|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:41:17.0195|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:41:17.3004|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:41:17.3211|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:41:17.3211|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:41:17.3211|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:41:17.3211|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:41:17.3211|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:41:17.3769|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:41:17.3769|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:41:17.5039|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:41:17.5039|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:41:17.5039|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:41:17.5039|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:41:20.2147|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U0Q45M5Q" accepted. 
2025-10-01 16:41:20.2182|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U0Q45M5Q" started. 
2025-10-01 16:41:20.4194|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U0Q45M5Q established using the following protocol: Tls13 
2025-10-01 16:41:20.5950|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:41:20.6146|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:41:20.6146|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:41:20.6146|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:41:20.6146|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:41:20.6146|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:41:20.6722|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:41:20.7252|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:41:20.7595|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:41:20.8883|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:41:20.8883|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:41:20.8883|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:41:20.8883|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:41:21.0920|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:41:21.0920|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:41:21.1939|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:41:21.1939|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:41:21.1939|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:41:21.1939|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:41:21.1983|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:41:21.1983|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:41:21.1983|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:41:21.6199|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:41:24.5712|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:41:24.5712|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:41:24.5735|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:41:24.5735|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:41:24.5735|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:41:24.6400|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:41:26.2432|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:41:26.2454|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:41:26.2454|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:41:26.8721|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:41:27.1087|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:41:27.3036|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:41:27.5549|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:41:27.5549|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:41:28.6070|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:41:28.7399|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:41:28.8109|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (58ms). 
2025-10-01 16:41:28.8109|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:29.4388|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:29.4478|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:41:29.4729|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (11ms). 
2025-10-01 16:41:29.4729|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (31ms). 
2025-10-01 16:41:29.5013|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:41:29.7085|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (203ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:41:29.8398|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.0135|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.0317|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.1792|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.1957|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2714|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.2906|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.3212|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 582ms reading results. 
2025-10-01 16:41:30.3421|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.3639|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (28ms). 
2025-10-01 16:41:30.3722|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:41:30.3722|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:41:30.3722|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:41:30.4134|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:41:30.4322|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.4634|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.4634|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:41:30.4634|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:41:30.4634|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:41:30.4634|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:41:30.4791|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:41:30.4957|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.4957|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:41:30.5208|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.5208|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 43ms reading results. 
2025-10-01 16:41:30.5208|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:30.5208|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:41:31.8080|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 7150.0078ms. 
2025-10-01 16:41:31.8080|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:41:31.8080|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:41:31.8080|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:41:31.8080|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:41:31.8080|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:41:31.8080|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:41:31.8080|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 16:41:31.8080|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 16:41:31.8344|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 16:41:31.8621|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 16:41:31.8621|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:41:31.8621|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:41:31.8621|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:41:31.8621|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:41:31.8730|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:41:31.8730|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 16:41:31.8730|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 7298 and flags NONE. 
2025-10-01 16:41:31.8730|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 16:41:31.8866|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:41:31.8866|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:41:31.9059|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 10689.6135ms 
2025-10-01 16:41:31.9059|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:41:31.9059|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U0Q45M5Q" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:41:31.9253|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 16:41:31.9380|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:41:31.9380|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (6ms). 
2025-10-01 16:41:31.9380|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 72834 application/pdf 11244.8964ms 
2025-10-01 16:42:14.2617|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:42:14.9216|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:42:16.4367|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:42:16.6864|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:42:16.7724|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:42:16.8052|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:42:16.8216|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:42:16.8449|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:42:16.8591|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:42:16.8959|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:42:16.9066|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:42:16.9066|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:42:16.9066|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:42:16.9277|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:42:16.9277|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:42:16.9336|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:42:16.9336|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:42:16.9521|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:42:16.9521|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:42:16.9521|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:42:17.2142|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:42:17.2142|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:42:17.2355|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:42:17.5794|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1B780AK" accepted. 
2025-10-01 16:42:17.5794|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:42:17.5794|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1B780AK" started. 
2025-10-01 16:42:17.6101|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:42:17.6101|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:42:17.6101|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:42:17.6101|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:42:17.6101|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:42:17.6356|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:42:17.6406|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:42:17.7461|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U1B780AK established using the following protocol: Tls13 
2025-10-01 16:42:17.7914|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:42:17.7922|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:42:17.7922|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:42:17.7922|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:42:17.8171|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:42:17.8394|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:42:17.8394|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:42:17.8422|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:42:17.8422|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:42:17.8422|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:17.8888|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:42:17.9307|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:42:18.2097|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:18.3155|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:42:18.3155|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:42:18.3155|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:42:18.3155|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:18.4950|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:18.5019|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:42:18.6429|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:42:18.6429|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:42:18.6524|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:42:18.6524|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:42:18.6696|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:42:18.6696|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:42:18.6696|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:42:18.6696|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:42:18.6696|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:42:18.6696|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:42:18.6905|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 769.0113ms 
2025-10-01 16:42:18.7180|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 3 with length 144 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:18.7180|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:18.7180|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:18.7180|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:42:18.7180|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:42:18.7180|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:42:18.7180|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:18.7180|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:18.7180|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:42:18.7180|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.7180|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:42:18.7180|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:42:18.7180|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.7180|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.7180|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:42:18.7180|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.7180|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:18.7180|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:18.7602|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:18.7930|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:42:18.8305|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:18.8305|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.8391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:42:18.8391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:42:18.8391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:42:18.8391|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:42:18.8391|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 128.9132ms 
2025-10-01 16:42:18.8391|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:42:18.8618|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:18.8618|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:42:18.8618|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:42:18.8618|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:42:18.8618|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:42:18.8618|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:42:18.8618|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 146.7065ms 
2025-10-01 16:42:18.8618|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 146.4260ms 
2025-10-01 16:42:18.8618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:42:18.8618|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:42:18.9598|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:42:18.9598|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:42:18.9642|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:42:18.9642|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 107.4563ms 
2025-10-01 16:42:19.0408|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:19.0408|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:42:19.0416|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:19.0416|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:42:19.0416|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:42:19.0416|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.0416|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:19.0416|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:19.0416|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.6415|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:42:19.6415|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:42:19.6415|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:42:19.6415|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:42:19.6415|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:42:19.6415|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:19.6415|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:42:19.6415|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:19.6415|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:42:19.6415|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:42:19.6415|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.6415|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:19.6415|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:19.6415|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.6415|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.6594|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:42:19.6594|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 618.1330ms 
2025-10-01 16:42:19.7607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:42:19.7607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:42:19.7607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:42:19.7607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:42:19.7607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:42:19.7622|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:42:19.7622|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:42:19.7622|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 115.7533ms 
2025-10-01 16:42:24.2809|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1B780AK" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:42:24.2809|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:42:24.2809|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:42:24.2809|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:42:24.2809|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:42:24.2809|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:42:24.2809|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:42:24.2809|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:42:24.2809|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:42:24.3719|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:42:24.3719|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:42:24.7853|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:42:27.6271|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:42:27.6394|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:42:27.6394|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:42:27.6394|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:42:27.6394|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:42:27.6738|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:42:29.3830|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:42:29.3849|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:42:29.3849|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:42:29.9816|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:42:30.2698|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:42:30.4535|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:42:30.7616|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:42:30.7616|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:42:31.5227|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:42:31.6011|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:42:31.6301|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (30ms). 
2025-10-01 16:42:31.6301|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:31.9851|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:31.9851|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:42:32.0066|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (7ms). 
2025-10-01 16:42:32.0066|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (19ms). 
2025-10-01 16:42:32.0265|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:42:32.1882|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (154ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:42:32.3111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.4877|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.5053|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.6715|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.6917|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7564|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.7753|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.7952|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 589ms reading results. 
2025-10-01 16:42:32.7952|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.8243|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (19ms). 
2025-10-01 16:42:32.8243|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:42:32.8243|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:42:32.8243|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:42:32.8639|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:42:32.8766|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.9007|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.9007|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:42:32.9018|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:42:32.9018|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:42:32.9018|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:42:32.9247|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:42:32.9421|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9421|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:42:32.9708|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.9708|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 48ms reading results. 
2025-10-01 16:42:32.9708|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:42:32.9708|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:43:12.0429|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:43:12.3504|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:43:13.6132|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:43:13.8706|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:43:13.9641|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:43:13.9987|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:43:14.0341|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:43:14.0715|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:43:14.0969|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:43:14.1691|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:43:14.1691|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:43:14.1973|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:43:14.2043|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:43:14.2229|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:43:14.2229|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:43:14.2338|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:43:14.2338|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:43:14.2756|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:43:14.2891|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:43:14.2891|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:43:14.5127|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:43:14.5127|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:43:14.5405|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:43:14.8582|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOO" accepted. 
2025-10-01 16:43:14.8582|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOP" accepted. 
2025-10-01 16:43:14.8582|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOP" started. 
2025-10-01 16:43:14.8582|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOO" started. 
2025-10-01 16:43:14.8966|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:43:14.9223|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:43:14.9223|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:43:14.9223|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:43:14.9223|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:43:14.9223|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:43:14.9537|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:43:14.9537|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:43:14.9881|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U1S9FSOP" received FIN. 
2025-10-01 16:43:15.1246|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U1S9FSOO established using the following protocol: Tls13 
2025-10-01 16:43:15.1246|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U1S9FSOP established using the following protocol: Tls13 
2025-10-01 16:43:15.1816|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOP" is closed. The last processed stream ID was 0. 
2025-10-01 16:43:15.1816|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U1S9FSOP" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:43:15.1962|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0U1S9FSOP completed. 
2025-10-01 16:43:15.1962|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:43:15.2120|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:43:15.2120|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOP" stopped. 
2025-10-01 16:43:15.2120|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:43:15.2120|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:43:15.2142|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:43:15.2142|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:43:15.2142|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:43:15.2142|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:43:15.2142|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:43:15.2142|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:43:15.2922|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:43:15.3438|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:43:15.3754|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:43:15.4671|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:43:15.4671|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:43:15.4671|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:43:15.4671|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:43:15.6509|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:43:15.6593|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:43:15.7640|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:43:15.7640|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:43:16.1550|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:43:17.7524|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:43:17.7524|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:43:17.7524|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:43:17.7524|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:43:17.7524|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:43:17.7846|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:43:18.6863|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:43:18.6863|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:43:18.6863|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:43:18.8995|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:43:19.0248|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:43:19.1422|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:43:19.3029|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:43:19.3029|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:43:19.8718|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:43:19.9461|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:43:19.9906|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (36ms). 
2025-10-01 16:43:19.9988|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:20.4461|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:20.4528|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:43:20.4528|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (8ms). 
2025-10-01 16:43:20.4678|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (14ms). 
2025-10-01 16:43:20.4884|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:43:20.5872|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (110ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:43:20.6538|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.7511|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.7636|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.8471|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.8575|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9014|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9014|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:20.9020|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:20.9239|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 325ms reading results. 
2025-10-01 16:43:20.9239|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:20.9417|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (12ms). 
2025-10-01 16:43:20.9417|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:43:20.9417|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:43:20.9502|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:43:20.9804|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:43:20.9804|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:21.0231|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:21.0231|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:43:21.0231|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:43:21.0231|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:43:21.0231|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:43:21.0463|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:43:21.0463|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0463|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:43:21.0942|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:21.0942|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 48ms reading results. 
2025-10-01 16:43:21.0942|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:21.0942|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:43:22.1839|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 4378.7832ms. 
2025-10-01 16:43:22.1864|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:43:22.1864|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:43:22.1864|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:43:22.1864|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:43:22.1864|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:43:22.1864|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:43:22.1864|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 16:43:22.1864|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 16:43:22.2060|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 16:43:22.2271|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 16:43:22.2271|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:43:22.2271|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:43:22.2271|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:43:22.2271|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 16:43:22.2607|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:43:22.2607|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 16:43:22.2607|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 7659 and flags NONE. 
2025-10-01 16:43:22.2607|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 16:43:22.2607|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:43:22.2607|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 16:43:22.2937|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 6503.899ms 
2025-10-01 16:43:22.2937|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:43:22.2937|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:43:22.3155|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 16:43:22.3295|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:43:22.3295|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (4ms). 
2025-10-01 16:43:22.3295|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 73195 application/pdf 7016.9320ms 
2025-10-01 16:43:55.5765|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U1S9FSOO" received FIN. 
2025-10-01 16:43:55.5765|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U1S9FSOO" is closed. The last processed stream ID was 1. 
2025-10-01 16:43:55.5765|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U1S9FSOO" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:43:55.6208|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0U1S9FSOO completed. 
2025-10-01 16:43:55.6223|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U1S9FSOO" stopped. 
2025-10-01 16:44:12.1737|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:44:12.5672|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:44:13.2134|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:44:13.3812|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:44:13.4404|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:44:13.4599|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:44:13.4692|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:44:13.4856|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:44:13.4856|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:44:13.5152|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:44:13.5152|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:44:13.5152|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:44:13.5293|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:44:13.5293|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:44:13.5293|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:44:13.5293|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:44:13.5293|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:44:13.5593|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:44:13.5593|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:44:13.5593|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:44:13.6613|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:44:13.6613|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:44:13.6715|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:44:13.8340|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:44:13.8479|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:44:13.8479|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:44:13.8479|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:44:13.8479|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:44:13.8479|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:44:13.8694|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:44:13.8694|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:44:13.9519|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:44:13.9519|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:44:13.9519|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:44:13.9519|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:44:29.0079|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U2ICKPH8" accepted. 
2025-10-01 16:44:29.0112|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U2ICKPH8" started. 
2025-10-01 16:44:29.1695|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U2ICKPH8 established using the following protocol: Tls13 
2025-10-01 16:44:29.2362|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:44:29.2510|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:44:29.2510|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:44:29.2510|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:44:29.2510|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:44:29.2510|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:44:29.3325|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U2ICKPH8" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:44:29.3782|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:44:29.4092|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:44:29.5374|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:44:29.5374|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:44:29.5374|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:44:29.5459|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:44:29.7401|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:44:29.7465|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:44:29.8253|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:44:29.8253|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:44:29.8253|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:44:29.8253|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:44:29.8293|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:44:29.8293|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:44:29.8293|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:44:30.2011|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:44:33.1986|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:44:33.2013|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:44:33.2013|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:44:33.2013|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:44:33.2013|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:44:33.2291|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:44:35.1645|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:44:35.1645|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:44:35.1645|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:44:35.9029|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:44:36.1623|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:44:36.3739|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:44:36.6579|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:44:36.6579|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:44:37.7082|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:44:37.8300|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:44:37.9165|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (72ms). 
2025-10-01 16:44:37.9265|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:38.5693|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:38.5802|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:44:38.6074|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (12ms). 
2025-10-01 16:44:38.6074|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (35ms). 
2025-10-01 16:44:38.6427|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:44:38.8433|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (191ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:44:38.9881|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.1585|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.1794|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.3223|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.3441|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.4387|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.4630|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 597ms reading results. 
2025-10-01 16:44:39.4710|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.4907|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (18ms). 
2025-10-01 16:44:39.5084|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:44:39.5122|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:44:39.5122|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:44:39.5547|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:44:39.5685|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.6266|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.6266|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:44:39.6266|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:44:39.6266|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:44:39.6266|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:44:39.6609|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:44:39.6973|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.6973|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:44:39.7288|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.7288|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 69ms reading results. 
2025-10-01 16:44:39.7288|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:44:39.7320|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:45:41.6775|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:45:42.3368|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:45:44.4159|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:45:44.6235|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:45:44.6906|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:45:44.7170|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:45:44.7498|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:45:44.7781|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:45:44.7781|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:45:44.8163|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:45:44.8249|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:45:44.8249|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:45:44.8397|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:45:44.8397|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:45:44.8397|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:45:44.8540|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:45:44.8540|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:45:44.8716|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:45:44.8716|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:45:44.8716|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:45:45.0568|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:45:45.0627|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:45:45.0837|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:45:45.3790|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:45:45.3904|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:45:45.3904|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:45:45.3904|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:45:45.3904|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:45:45.3904|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:45:45.4047|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:45:45.4047|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:45:45.5076|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:45:45.5076|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:45:45.5076|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:45:45.5099|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:45:46.5675|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U39GA1KS" accepted. 
2025-10-01 16:45:46.5675|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U39GA1KS" started. 
2025-10-01 16:45:46.7409|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U39GA1KS established using the following protocol: Tls13 
2025-10-01 16:45:46.8156|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:45:46.8338|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:45:46.8338|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:45:46.8338|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:45:46.8338|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:45:46.8338|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:45:46.8839|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U39GA1KS" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:45:46.9216|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:45:46.9447|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:45:47.0664|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:45:47.0664|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:45:47.0664|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:45:47.0764|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:45:47.2358|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:45:47.2358|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:45:47.3222|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:45:47.3251|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:45:47.7839|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:45:50.4318|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:45:50.4348|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:45:50.4348|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:45:50.4348|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:45:50.4348|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:45:50.4562|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:45:52.0077|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:45:52.0077|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:45:52.0077|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:45:52.5697|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:45:52.8456|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:45:53.0718|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:45:53.4075|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:45:53.4075|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:45:54.2982|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:45:54.4836|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:45:54.5541|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (56ms). 
2025-10-01 16:45:54.5639|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:55.1284|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:55.1372|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:45:55.1572|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (10ms). 
2025-10-01 16:45:55.1572|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (24ms). 
2025-10-01 16:45:55.1841|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:45:55.3517|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (167ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:45:55.4696|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.6275|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.6438|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.7771|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.7946|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8587|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:55.8768|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:55.8975|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 525ms reading results. 
2025-10-01 16:45:55.9073|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:55.9256|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (19ms). 
2025-10-01 16:45:55.9256|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:45:55.9350|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:45:55.9350|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:45:55.9745|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:45:55.9906|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:56.0462|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:56.0462|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:45:56.0462|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:45:56.0462|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:45:56.0462|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:45:56.0675|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:45:56.0828|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.0828|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:45:56.1117|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:56.1117|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 46ms reading results. 
2025-10-01 16:45:56.1117|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:45:56.1117|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:46:27.9125|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:46:28.3781|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:46:29.5529|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:46:29.7666|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:46:29.8578|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:46:29.8889|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:46:29.9123|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:46:29.9351|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:46:29.9504|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:46:29.9879|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:46:29.9985|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:46:29.9985|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:46:30.0122|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:46:30.0122|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:46:30.0282|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:46:30.0282|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:46:30.0282|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:46:30.0565|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:46:30.0630|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:46:30.0630|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:46:30.2907|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:46:30.2948|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:46:30.3217|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:46:30.5972|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U3MK6S87" accepted. 
2025-10-01 16:46:30.5972|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U3MK6S88" accepted. 
2025-10-01 16:46:30.5972|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U3MK6S87" started. 
2025-10-01 16:46:30.5972|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U3MK6S88" started. 
2025-10-01 16:46:30.6294|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:46:30.6585|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:46:30.6585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:46:30.6585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:46:30.6585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:46:30.6585|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:46:30.6924|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:46:30.6924|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:46:30.7308|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U3MK6S87" received FIN. 
2025-10-01 16:46:30.7835|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U3MK6S87 established using the following protocol: Tls13 
2025-10-01 16:46:30.7835|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U3MK6S88 established using the following protocol: Tls13 
2025-10-01 16:46:30.8652|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S87" is closed. The last processed stream ID was 0. 
2025-10-01 16:46:30.8652|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0U3MK6S87" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 16:46:30.8742|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0U3MK6S87 completed. 
2025-10-01 16:46:30.8742|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:46:30.8742|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:46:30.8742|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:46:30.8881|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:46:30.8881|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:46:30.8881|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U3MK6S87" stopped. 
2025-10-01 16:46:30.9022|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:46:30.9022|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:46:30.9022|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:46:30.9022|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:46:30.9022|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:30.9504|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:46:30.9827|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:46:31.3262|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:31.4356|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:46:31.4356|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:46:31.4356|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:46:31.4356|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:31.6040|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:31.6080|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:46:31.7076|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:46:31.7076|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:46:31.7076|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:46:31.7076|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:46:31.7206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:46:31.7206|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:46:31.7206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 1 with length 437 and flags NONE. 
2025-10-01 16:46:31.7206|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:46:31.7206|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:46:31.7206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:46:31.7206|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 760.2569ms 
2025-10-01 16:46:31.7416|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 3 with length 144 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:31.7416|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:46:31.7416|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:31.7416|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:46:31.7416|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:46:31.7416|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:46:31.7416|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:46:31.7416|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:31.7416|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:31.7416|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:46:31.8007|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:31.8007|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:31.8007|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:46:31.8007|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:46:31.8007|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:31.8125|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8125|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8125|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8125|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8125|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:31.8125|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:31.8125|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8125|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:46:31.8125|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:46:31.8125|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:46:31.8384|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:46:31.8384|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:46:31.8384|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:46:31.8384|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:46:31.8384|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:46:31.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:46:31.8384|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 97.0010ms 
2025-10-01 16:46:31.8384|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 38.6223ms 
2025-10-01 16:46:31.8384|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 38.2972ms 
2025-10-01 16:46:31.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:46:31.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:46:31.8485|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:31.8485|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:46:31.9478|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:46:31.9478|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:46:31.9535|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:46:31.9535|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 110.2143ms 
2025-10-01 16:46:32.5509|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:32.5509|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:46:32.5509|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:32.5509|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:46:32.5509|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:46:32.5509|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:32.5509|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:32.5509|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:32.5509|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:33.1949|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:46:33.1949|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:46:33.1949|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:46:33.1949|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:46:33.1949|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:46:33.1990|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:33.1990|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:46:33.1990|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:33.1990|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:46:33.1990|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:46:33.1990|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:33.1990|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:33.1990|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:33.1990|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:33.1990|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:33.1990|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:46:33.1990|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 655.3197ms 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:46:33.2982|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:46:33.2982|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 100.5397ms 
2025-10-01 16:46:33.2982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:46:36.1849|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U3MK6S88" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:46:36.1849|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:46:36.1849|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:46:36.1849|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:46:36.1849|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:46:36.1849|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:46:36.1849|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:46:36.1849|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:46:36.1896|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:46:36.3118|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:46:36.3118|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:46:36.3118|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:46:36.3118|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:46:36.3118|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:46:36.3118|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:46:36.3236|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:46:36.7234|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:46:39.8384|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:46:39.8400|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:46:39.8400|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:46:39.8400|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:46:39.8400|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:46:39.8724|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:46:41.5937|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:46:41.5937|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:46:41.5937|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:46:42.2526|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:46:42.5324|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:46:42.7200|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:46:42.9845|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:46:42.9845|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:46:43.9078|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:46:44.0291|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:46:44.0816|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (54ms). 
2025-10-01 16:46:44.0902|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:44.6482|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:44.6580|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:46:44.6715|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (12ms). 
2025-10-01 16:46:44.6715|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (20ms). 
2025-10-01 16:46:44.7025|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:46:44.9221|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (213ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:46:45.0475|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.2123|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.2301|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.3718|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.3871|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.4754|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.4998|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 555ms reading results. 
2025-10-01 16:46:45.4998|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.5292|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (20ms). 
2025-10-01 16:46:45.5292|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:46:45.5292|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:46:45.5292|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:46:45.5788|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:46:45.5926|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.6364|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.6364|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:46:45.6364|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:46:45.6364|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:46:45.6364|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:46:45.6720|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:46:45.6944|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.6944|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:46:45.7261|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.7261|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 55ms reading results. 
2025-10-01 16:46:45.7261|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:46:45.7261|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:52:28.9906|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:52:29.5917|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:52:31.4499|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:52:31.7030|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:52:31.8296|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:52:31.8685|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:52:31.9018|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:52:31.9287|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:52:31.9503|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:52:31.9936|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:52:32.0021|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:52:32.0021|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:52:32.0141|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:52:32.0280|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:52:32.0280|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:52:32.0280|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:52:32.0280|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:52:32.0613|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:52:32.0613|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:52:32.0613|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:52:32.3161|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:52:32.3161|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:52:32.3637|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:52:32.7685|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:52:32.7973|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:52:32.7973|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:52:32.7973|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:52:32.7973|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:52:32.7973|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:52:32.8264|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:52:32.8264|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:52:32.9194|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:52:32.9194|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:52:32.9194|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:52:32.9194|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:52:34.5378|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U7330K1M" accepted. 
2025-10-01 16:52:34.5429|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U7330K1M" started. 
2025-10-01 16:52:34.7607|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U7330K1M established using the following protocol: Tls13 
2025-10-01 16:52:34.8788|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:52:34.8982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:52:34.8982|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:52:34.8982|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:52:34.8982|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:52:34.9017|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 1 with length 474 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:34.9460|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:52:35.0013|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:52:35.2843|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:35.4329|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:52:35.4329|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:52:35.4329|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:52:35.4329|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:35.6583|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:35.6676|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:52:35.8640|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:52:35.8640|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:52:35.8725|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:52:35.8725|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 16:52:35.8878|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 16:52:35.8878|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 16:52:35.8878|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 16:52:35.8878|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:52:35.8878|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:52:35.8878|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:52:35.8878|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:52:35.9048|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 920.2587ms 
2025-10-01 16:52:35.9214|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 3 with length 144 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:35.9214|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:52:35.9214|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:35.9214|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:52:35.9214|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:52:35.9214|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:52:35.9214|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:35.9214|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:52:35.9214|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:35.9214|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:35.9214|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:52:35.9214|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:52:35.9214|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:35.9416|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:35.9657|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:35.9657|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:35.9657|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:35.9657|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:35.9657|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:35.9657|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:52:35.9885|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:35.9885|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:36.0871|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 16:52:36.0871|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:52:36.0871|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 16:52:36.0871|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:52:36.0871|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:52:36.0871|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:52:36.0871|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 16:52:36.0871|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 163.3627ms 
2025-10-01 16:52:36.0871|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 158.7100ms 
2025-10-01 16:52:36.0871|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:52:36.0871|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:52:36.0983|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:52:36.0983|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 16:52:36.0983|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 170.6608ms 
2025-10-01 16:52:36.0983|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:36.0983|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:52:36.1966|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 16:52:36.1966|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 16:52:36.2042|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:52:36.2042|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 111.6055ms 
2025-10-01 16:52:36.8649|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:36.8649|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:52:36.8649|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:36.8649|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:52:36.8649|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:52:36.8649|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:36.8649|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:36.8649|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:36.8649|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:37.4977|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 16:52:37.4977|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:52:37.4977|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:52:37.4977|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 16:52:37.4977|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 16:52:37.4977|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:37.4977|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:52:37.4977|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:37.4977|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:52:37.4977|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:52:37.4977|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:37.4977|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:37.4977|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:37.4977|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:37.4977|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:37.5190|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:52:37.5190|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 652.3328ms 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending HEADERS frame for stream ID 13 with length 34 and flags END_HEADERS. 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:52:37.6134|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:52:37.6134|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:52:37.6134|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 112.6488ms 
2025-10-01 16:52:40.6486|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7330K1M" received HEADERS frame for stream ID 15 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:52:40.6486|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:52:40.6486|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:52:40.6486|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:52:40.6486|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:52:40.6486|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:52:40.6486|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:52:40.6486|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:52:40.6486|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:52:40.7732|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:52:40.7732|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:52:40.7732|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:52:40.7771|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:52:40.7771|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:52:40.7771|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:52:40.7771|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:52:41.2403|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:52:47.2531|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:52:47.2531|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:52:47.2531|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:52:47.2531|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:52:47.2531|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:52:47.2851|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:52:49.1670|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:52:49.1670|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:52:49.1670|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:52:49.9011|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:52:50.2408|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:52:50.4571|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:52:50.7597|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:52:50.7654|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:52:51.8470|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:52:52.0104|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:52:52.1265|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (121ms). 
2025-10-01 16:52:52.1394|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:52.6380|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:52.6380|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:52:52.6538|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (6ms). 
2025-10-01 16:52:52.6538|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (14ms). 
2025-10-01 16:52:52.6538|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:52:52.7661|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (97ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:52:52.8185|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.8755|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.8755|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9427|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9427|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9795|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:52.9878|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:52.9878|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 222ms reading results. 
2025-10-01 16:52:53.0026|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:53.0148|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (11ms). 
2025-10-01 16:52:53.0148|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:52:53.0148|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:52:53.0148|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:52:53.0473|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:52:53.0473|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:53.0793|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:53.0793|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:52:53.0793|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:52:53.0793|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:52:53.0793|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:52:53.0969|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:52:53.1114|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1114|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:52:53.1293|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:53.1293|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 32ms reading results. 
2025-10-01 16:52:53.1293|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:52:53.1293|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:53:48.1054|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:53:48.4368|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:53:49.3167|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:53:49.4124|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:53:49.4610|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:53:49.4742|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:53:49.4849|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:53:49.5016|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:53:49.5151|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:53:49.5287|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:53:49.5287|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:53:49.5287|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:53:49.5287|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:53:49.5464|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:53:49.5464|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:53:49.5464|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:53:49.5464|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:53:49.5671|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:53:49.5671|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:53:49.5727|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:53:49.6605|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:53:49.6605|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:53:49.6750|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:53:49.8736|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:53:49.8736|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:53:49.8736|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:53:49.8736|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:53:49.8736|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:53:49.8736|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:53:49.8912|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:53:49.8912|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:53:49.9476|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:53:49.9476|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:53:49.9476|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:53:49.9476|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:53:55.5606|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U7R7MNN2" accepted. 
2025-10-01 16:53:55.5606|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U7R7MNN2" started. 
2025-10-01 16:53:55.7794|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U7R7MNN2 established using the following protocol: Tls13 
2025-10-01 16:53:55.8525|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:53:55.8705|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:53:55.8705|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:53:55.8705|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:53:55.8705|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:53:55.8705|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:53:55.9229|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:53:55.9756|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:53:56.0126|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:53:56.1548|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:53:56.1548|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:53:56.1548|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:53:56.1548|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:53:56.3658|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:53:56.3732|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:53:56.4743|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:53:56.4743|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:53:56.4743|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:53:56.4743|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:53:56.4797|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:53:56.4797|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:53:56.4797|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:53:56.9922|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:53:59.8761|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:53:59.8761|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:53:59.8761|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:53:59.8761|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:53:59.8761|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:53:59.9167|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:54:01.6832|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:54:01.6832|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:54:01.6832|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:54:02.2962|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:54:02.6279|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:54:02.8721|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:54:03.2093|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:54:03.2156|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:54:04.1907|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:54:04.3375|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:54:04.4215|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (70ms). 
2025-10-01 16:54:04.4336|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:05.1039|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:05.1180|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:54:05.1527|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (20ms). 
2025-10-01 16:54:05.1527|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (41ms). 
2025-10-01 16:54:05.1806|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:54:05.3647|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (168ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:54:05.5064|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.6663|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.6826|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8151|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8318|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.8934|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:05.9104|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:05.9312|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 544ms reading results. 
2025-10-01 16:54:05.9393|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:05.9591|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (19ms). 
2025-10-01 16:54:05.9591|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:54:05.9682|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:54:05.9682|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:54:06.0082|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:54:06.0203|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:06.0615|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:06.0615|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:54:06.0615|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:54:06.0615|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:54:06.0615|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:54:06.0765|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:54:06.0966|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.0966|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:54:06.1276|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:06.1276|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 51ms reading results. 
2025-10-01 16:54:06.1276|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:54:06.1276|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:55:22.7921|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:55:22.7927|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:55:22.7927|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:55:22.7927|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:55:22.7927|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 86316.5699ms 
2025-10-01 16:55:22.7927|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:55:22.9140|0|ERROR|LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare|_ WHAT HAVE YOU DONE!!! System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem\bin\Debug\net9.0\LibrarymanagementSystem.Utiles\HTML\PdfHtml.html'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at LibraryManagementSystem.API.Helpers.PdfHtmlBuilder.BuildHtml(List`1 active, List`1 returned)
   at LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at LibraryManagementSystem.API.Exceptions.GlobalExceptionHandlerMiddleWare.InvokeAsync(HttpContext context, RequestDelegate next)
2025-10-01 16:55:23.0206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 1 with length 59 and flags END_HEADERS. 
2025-10-01 16:55:23.0206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 1 with length 254 and flags NONE. 
2025-10-01 16:55:23.0206|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 16:55:23.0302|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 16:55:23.0302|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:55:23.0420|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:23.0420|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (3ms). 
2025-10-01 16:55:23.0420|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 500 - application/json 87096.0330ms 
2025-10-01 16:55:23.9698|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 3 with length 185 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:23.9698|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 16:55:24.2397|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:24.2397|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 16:55:24.2397|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 16:55:24.2397|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:55:24.2397|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:24.2397|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:24.2397|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:55:24.4281|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 16:55:24.4342|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 16:55:24.4342|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 16:55:24.4342|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 3 with length 44 and flags END_HEADERS. 
2025-10-01 16:55:24.4602|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 3 with length 882 and flags NONE. 
2025-10-01 16:55:24.4602|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 3 with length 357 and flags NONE. 
2025-10-01 16:55:24.4602|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 3 with length 80 and flags NONE. 
2025-10-01 16:55:24.4602|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 16:55:24.4602|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 16:55:24.4602|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 16:55:24.4602|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 3 with length 0 and flags END_STREAM. 
2025-10-01 16:55:24.4602|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 490.2495ms 
2025-10-01 16:55:24.4802|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 5 with length 70 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:24.4802|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 7 with length 68 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:24.4802|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 16:55:24.4802|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:24.4802|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 9 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:24.4802|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 16:55:24.4802|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:24.4802|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 16:55:24.4802|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.4802|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 16:55:24.4802|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.4802|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:55:24.4802|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.4802|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 16:55:24.4802|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:55:24.4802|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.4802|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:24.4802|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:24.4802|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:24.4802|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:24.4802|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.4802|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:55:24.5260|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 9 with length 60 and flags END_HEADERS. 
2025-10-01 16:55:24.5260|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:55:24.5260|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 9 with length 16384 and flags NONE. 
2025-10-01 16:55:24.5260|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 16:55:24.5260|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 16:55:24.5260|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 16:55:24.5260|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 9 with length 155 and flags NONE. 
2025-10-01 16:55:24.5260|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 45.2616ms 
2025-10-01 16:55:24.5260|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 43.8324ms 
2025-10-01 16:55:24.5260|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 7 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:55:24.5260|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 5 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 16:55:24.5260|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 11 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:24.5260|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 16:55:24.5464|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 16:55:24.5464|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 16:55:24.5464|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 68.0697ms 
2025-10-01 16:55:24.6643|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 11 with length 149 and flags END_HEADERS. 
2025-10-01 16:55:24.6643|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 9986 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 10240 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 1806 and flags NONE. 
2025-10-01 16:55:24.6711|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 16:55:24.6711|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 138.5469ms 
2025-10-01 16:55:24.7582|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:24.7582|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:55:24.7582|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:24.7582|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:55:24.7613|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:55:24.7613|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:24.7613|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:24.7613|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:24.7613|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:24.8121|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:55:24.8121|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 13 with length 35 and flags END_HEADERS. 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 16:55:25.4695|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 15 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:25.4695|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 16:55:25.4695|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:25.4695|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 16:55:25.4695|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 16:55:25.4695|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:25.4695|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:25.4695|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:25.4695|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:25.4695|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:25.4695|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 16:55:25.4695|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 719.4553ms 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending HEADERS frame for stream ID 15 with length 4 and flags END_HEADERS. 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 15 with length 16384 and flags NONE. 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 15 with length 16384 and flags NONE. 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 15 with length 16384 and flags NONE. 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 15 with length 9530 and flags NONE. 
2025-10-01 16:55:25.5768|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 16:55:25.5768|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" sending DATA frame for stream ID 15 with length 0 and flags END_STREAM. 
2025-10-01 16:55:25.5768|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 103.8671ms 
2025-10-01 16:55:28.9194|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U7R7MNN2" received HEADERS frame for stream ID 17 with length 50 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:55:28.9194|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:55:28.9194|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:55:28.9194|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:55:28.9194|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:55:28.9194|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:55:28.9194|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:55:28.9194|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:55:28.9194|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:55:28.9388|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:55:28.9388|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:55:28.9490|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:55:28.9490|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:55:28.9490|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:55:28.9490|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:55:28.9490|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:55:28.9490|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:55:29.1383|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:55:29.1582|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:55:29.1582|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (0ms). 
2025-10-01 16:55:29.1582|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.1951|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.1951|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:55:29.1951|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:55:29.1951|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:55:29.1951|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:55:29.2323|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2323|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2323|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 6ms reading results. 
2025-10-01 16:55:29.2323|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2323|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 16:55:29.2323|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2756|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2756|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:55:29.2756|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:55:29.2756|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:55:29.2756|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:55:29.2965|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:55:29.2965|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:55:29.2965|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2965|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 4ms reading results. 
2025-10-01 16:55:29.2965|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:55:29.2965|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 16:57:07.7293|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 16:57:08.1532|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 16:57:09.3883|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 16:57:09.6363|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 16:57:09.7237|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 16:57:09.7607|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 16:57:09.7782|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 16:57:09.8029|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 16:57:09.8226|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 16:57:09.8714|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 16:57:09.8714|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:57:09.8904|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 16:57:09.8904|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 16:57:09.9089|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 16:57:09.9089|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 16:57:09.9089|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 16:57:09.9089|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 16:57:09.9408|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 16:57:09.9408|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 16:57:09.9408|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 16:57:10.1778|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 16:57:10.1778|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 16:57:10.2038|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 16:57:10.5305|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 16:57:10.5843|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 16:57:10.5843|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 16:57:10.5843|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 16:57:10.5843|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 16:57:10.5843|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 16:57:10.6126|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:57:10.6126|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 16:57:10.7691|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 16:57:10.7691|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 16:57:10.7691|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 16:57:10.7691|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 16:57:11.2478|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U9LHTU11" accepted. 
2025-10-01 16:57:11.2478|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0U9LHTU11" started. 
2025-10-01 16:57:11.4168|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0U9LHTU11 established using the following protocol: Tls13 
2025-10-01 16:57:11.4961|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:57:11.5227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:57:11.5227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 16:57:11.5227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:57:11.5227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 16:57:11.5227|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 16:57:11.6182|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0U9LHTU11" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 16:57:11.6738|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 16:57:11.7057|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 16:57:11.8437|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:57:11.8437|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 16:57:11.8437|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:57:11.8437|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 16:57:12.0476|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 16:57:12.0476|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 16:57:12.1522|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 16:57:12.1522|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:57:12.5685|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 16:57:15.6733|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 16:57:15.6834|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:57:15.6834|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 16:57:15.6834|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:57:15.6834|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 16:57:15.7063|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 16:57:17.4777|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 16:57:17.4801|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 16:57:17.4801|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 16:57:18.1835|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 16:57:18.4520|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 16:57:18.6945|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 16:57:18.8579|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 16:57:18.8614|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 16:57:19.5017|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:57:19.6356|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 16:57:19.6815|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (36ms). 
2025-10-01 16:57:19.6887|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.1462|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.1540|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:57:20.1719|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (7ms). 
2025-10-01 16:57:20.1719|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (22ms). 
2025-10-01 16:57:20.1917|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:57:20.3425|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (141ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 16:57:20.4310|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.5437|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.5437|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.6515|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.6691|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7111|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.7208|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.7350|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 377ms reading results. 
2025-10-01 16:57:20.7350|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.7555|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (13ms). 
2025-10-01 16:57:20.7555|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 16:57:20.7555|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 16:57:20.7655|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 16:57:20.7929|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 16:57:20.7929|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.8546|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.8546|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 16:57:20.8546|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:57:20.8546|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 16:57:20.8546|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:57:20.8798|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 16:57:20.8989|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.8989|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 16:57:20.9228|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.9228|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 43ms reading results. 
2025-10-01 16:57:20.9228|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 16:57:20.9228|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 17:00:09.1299|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:00:09.4060|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:00:09.9417|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:00:10.0300|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:00:10.0712|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:00:10.0853|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:00:10.0910|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:00:10.0910|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:00:10.0910|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:00:10.1271|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:00:10.1271|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:00:10.1271|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:00:10.1271|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:00:10.1500|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:00:10.1524|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:00:10.1524|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:00:10.1524|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:00:10.1696|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:00:10.1696|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:00:10.1696|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:00:10.2960|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:00:10.2960|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:00:10.2960|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:00:10.4383|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:00:10.4383|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:00:10.4383|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:00:10.4383|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:00:10.4383|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:00:10.4383|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:00:10.4596|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:00:10.4596|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:00:10.5265|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:00:10.5271|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:00:10.5271|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:00:10.5271|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:00:15.9116|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UBCJ0ODS" accepted. 
2025-10-01 17:00:15.9116|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UBCJ0ODS" started. 
2025-10-01 17:00:16.1115|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UBCJ0ODS established using the following protocol: Tls13 
2025-10-01 17:00:16.1905|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:00:16.2108|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:00:16.2108|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:00:16.2108|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:00:16.2108|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:00:16.2108|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:00:16.2628|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UBCJ0ODS" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:00:16.3168|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:00:16.3481|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:00:16.5006|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:00:16.5006|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:00:16.5006|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:00:16.5103|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:00:16.7675|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:00:16.7675|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:00:16.8820|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:00:16.8820|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:00:16.8867|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:00:16.8867|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:00:16.8867|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:00:16.8867|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:00:16.8867|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:00:17.4271|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:00:20.0908|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:00:20.0908|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:00:20.0908|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:00:20.0908|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:00:20.0908|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:00:20.1308|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:00:21.9476|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:00:21.9476|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:00:21.9476|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:00:22.7525|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:00:23.1354|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:00:23.3658|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:00:23.6569|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:00:23.6569|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:00:24.7769|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:00:24.9340|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:00:25.0195|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (67ms). 
2025-10-01 17:00:25.0313|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:25.7388|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:25.7489|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:00:25.7788|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (13ms). 
2025-10-01 17:00:25.7788|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (38ms). 
2025-10-01 17:00:25.8184|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:00:26.0155|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (192ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:00:26.1808|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.3768|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.3990|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.5770|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.5982|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6809|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6809|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.6844|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.7043|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.7288|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 691ms reading results. 
2025-10-01 17:00:26.7393|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.7627|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (24ms). 
2025-10-01 17:00:26.7627|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:00:26.7627|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:00:26.7766|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:00:26.8144|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:00:26.8307|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.8684|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.8684|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:00:26.8684|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:00:26.8684|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:00:26.8684|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:00:26.8978|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:00:26.9223|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9223|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:00:26.9575|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.9575|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 60ms reading results. 
2025-10-01 17:00:26.9575|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:00:26.9575|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 17:02:24.0097|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:02:24.6381|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:02:26.2347|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:02:26.4892|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:02:26.6076|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:02:26.6479|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:02:26.6723|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:02:26.6970|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:02:26.7153|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:02:26.7583|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:02:26.7699|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:02:26.7851|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:02:26.7851|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:02:26.8036|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:02:26.8036|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:02:26.8036|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:02:26.8137|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:02:26.8525|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:02:26.8612|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:02:26.8612|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:02:27.1259|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:02:27.1259|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:02:27.1603|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:02:27.5366|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UCJQ9IEP" accepted. 
2025-10-01 17:02:27.5366|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UCJQ9IEP" started. 
2025-10-01 17:02:27.5521|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:02:27.5668|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UCJQ9IEQ" accepted. 
2025-10-01 17:02:27.5668|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UCJQ9IEQ" started. 
2025-10-01 17:02:27.6246|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:02:27.6246|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:02:27.6246|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:02:27.6246|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:02:27.6246|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:02:27.6603|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:02:27.6603|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:02:27.7696|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UCJQ9IEP" received FIN. 
2025-10-01 17:02:27.8678|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UCJQ9IEP established using the following protocol: Tls13 
2025-10-01 17:02:27.8678|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UCJQ9IEQ established using the following protocol: Tls13 
2025-10-01 17:02:27.9281|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:02:27.9281|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:02:27.9281|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:02:27.9281|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:02:27.9396|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEP" is closed. The last processed stream ID was 0. 
2025-10-01 17:02:27.9396|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UCJQ9IEP" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 17:02:27.9502|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0UCJQ9IEP completed. 
2025-10-01 17:02:27.9502|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:02:28.0015|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UCJQ9IEP" stopped. 
2025-10-01 17:02:28.0015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:02:28.0015|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:02:28.0015|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:02:28.0015|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:02:28.0015|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:02:28.0606|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:02:28.1147|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:02:28.1554|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:02:28.2757|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:02:28.2757|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:02:28.2757|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:02:28.2840|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:02:28.5587|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:02:28.5587|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:02:28.6734|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:02:28.6734|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:02:28.6734|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:02:28.6734|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:02:28.6734|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:02:28.6734|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:02:28.6873|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:02:29.1571|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:02:32.3189|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:02:32.3189|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:02:32.3232|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:02:32.3232|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:02:32.3232|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:02:32.3419|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:02:34.2323|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:02:34.2323|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:02:34.2323|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:02:35.0296|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:02:35.3556|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:02:35.6065|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:02:36.0278|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:02:36.0278|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:02:37.0955|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:02:37.2393|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:02:37.3082|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (55ms). 
2025-10-01 17:02:37.3185|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:38.0359|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:38.0460|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:02:38.0460|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (11ms). 
2025-10-01 17:02:38.0625|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (17ms). 
2025-10-01 17:02:38.0868|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:02:38.2974|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (210ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:02:38.4328|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.6279|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.6485|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.8106|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.8311|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9214|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:38.9427|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:38.9675|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 644ms reading results. 
2025-10-01 17:02:38.9675|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:38.9954|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (18ms). 
2025-10-01 17:02:39.0028|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:02:39.0028|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:02:39.0028|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:02:39.0539|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:02:39.0778|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:39.1115|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:39.1115|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:02:39.1115|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:02:39.1115|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:02:39.1115|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:02:39.1318|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:02:39.1555|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1555|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:02:39.1882|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:39.1882|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 57ms reading results. 
2025-10-01 17:02:39.1882|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:39.1882|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 17:02:40.5213|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 8156.8313ms. 
2025-10-01 17:02:40.5213|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:02:40.5213|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:02:40.5213|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:02:40.5213|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:02:40.5293|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:02:40.5293|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:02:40.5293|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:02:40.5293|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 17:02:40.5530|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 17:02:40.5873|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 17:02:40.5873|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:02:40.5873|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:02:40.5873|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:02:40.5873|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:02:40.6027|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:02:40.6027|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 17:02:40.6170|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 6696 and flags NONE. 
2025-10-01 17:02:40.6216|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:02:40.6216|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:02:40.6216|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:02:40.6545|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 11950.4992ms 
2025-10-01 17:02:40.6545|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:02:40.6707|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UCJQ9IEQ" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 17:02:40.6707|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 17:02:40.6908|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:02:40.6908|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (2ms). 
2025-10-01 17:02:40.6997|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 72232 application/pdf 12605.1444ms 
2025-10-01 17:22:42.6028|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:22:43.0169|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:22:44.2406|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:22:44.4975|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:22:44.6033|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:22:44.6440|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:22:44.6761|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:22:44.6985|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:22:44.7205|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:22:44.7597|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:22:44.7702|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:22:44.7807|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:22:44.7807|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:22:44.7985|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:22:44.7985|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:22:44.7985|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:22:44.7985|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:22:44.8342|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:22:44.8454|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:22:44.8454|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:22:45.1162|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:22:45.1162|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:22:45.1670|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:22:45.5018|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:22:45.5295|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:22:45.5295|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:22:45.5295|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:22:45.5295|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:22:45.5295|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:22:45.5491|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:22:45.5491|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:22:45.6157|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6F" accepted. 
2025-10-01 17:22:45.6157|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6F" started. 
2025-10-01 17:22:45.6512|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6G" accepted. 
2025-10-01 17:22:45.6512|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6G" started. 
2025-10-01 17:22:45.7060|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:22:45.7060|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:22:45.7060|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:22:45.7060|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:22:45.7929|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UNUQPT6G" received FIN. 
2025-10-01 17:22:45.8917|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UNUQPT6F established using the following protocol: Tls13 
2025-10-01 17:22:45.8917|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UNUQPT6G established using the following protocol: Tls13 
2025-10-01 17:22:45.9831|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6G" is closed. The last processed stream ID was 0. 
2025-10-01 17:22:45.9831|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UNUQPT6G" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 17:22:45.9831|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0UNUQPT6G completed. 
2025-10-01 17:22:45.9831|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:22:46.0077|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6G" stopped. 
2025-10-01 17:22:46.0077|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:22:46.0077|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:22:46.0077|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:22:46.0077|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:22:46.0115|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 1 with length 482 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:46.0614|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:22:46.1139|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/ - - - 
2025-10-01 17:22:46.3496|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:46.3976|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/scalar/' 
2025-10-01 17:22:46.3976|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/' 
2025-10-01 17:22:46.3976|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 17:22:46.3976|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:46.5088|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:46.5136|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 17:22:46.6600|2|INFO|Microsoft.AspNetCore.Http.Result.ContentResult|Write content with HTTP Response ContentType of text/html 
2025-10-01 17:22:46.6600|1|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup is scheduled to include Browser Link script injection. 
2025-10-01 17:22:46.6600|1|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup is scheduled to include browser refresh script injection. 
2025-10-01 17:22:46.6600|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 1 with length 52 and flags END_HEADERS. 
2025-10-01 17:22:46.6844|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 1 with length 882 and flags NONE. 
2025-10-01 17:22:46.6844|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 1 with length 357 and flags NONE. 
2025-10-01 17:22:46.6844|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 1 with length 80 and flags NONE. 
2025-10-01 17:22:46.6844|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/{documentName?}' 
2025-10-01 17:22:46.6844|2|DEBUG|Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware|Response markup was updated to include Browser Link script injection. 
2025-10-01 17:22:46.6844|2|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Response markup was updated to include browser refresh script injection. 
2025-10-01 17:22:46.6844|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 17:22:46.7020|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/ - 200 - text/html 601.9519ms 
2025-10-01 17:22:46.7159|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 3 with length 122 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:46.7159|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 5 with length 53 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:46.7159|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.js - - - 
2025-10-01 17:22:46.7159|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 7 with length 73 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:46.7159|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - - - 
2025-10-01 17:22:46.7159|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:46.7159|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - - - 
2025-10-01 17:22:46.7159|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:46.7159|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.js' 
2025-10-01 17:22:46.7159|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|2 candidate(s) found for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7159|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.js' with route pattern '/scalar/scalar.js' is valid for the request path '/scalar/scalar.js' 
2025-10-01 17:22:46.7159|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' with route pattern '/scalar/scalar.aspnetcore.js' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7159|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.js' 
2025-10-01 17:22:46.7159|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /scalar/{documentName?}' with route pattern '/scalar/{documentName?}' is valid for the request path '/scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7159|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7159|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 17:22:46.7159|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:46.7159|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:46.7159|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:46.7159|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:46.7159|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 17:22:46.7159|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7557|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 5 with length 60 and flags END_HEADERS. 
2025-10-01 17:22:46.7557|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 5 with length 16384 and flags NONE. 
2025-10-01 17:22:46.7557|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 5 with length 155 and flags NONE. 
2025-10-01 17:22:46.7557|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Script injected: /_framework/aspnetcore-browser-refresh.js 
2025-10-01 17:22:46.7557|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 5 with length 0 and flags END_STREAM. 
2025-10-01 17:22:46.7557|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_framework/aspnetcore-browser-refresh.js - 200 16539 application/javascript;+charset=utf-8 43.5773ms 
2025-10-01 17:22:46.7666|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 17:22:46.7666|1|INFO|Microsoft.AspNetCore.Http.Result.StatusCodeResult|Setting HTTP status code 304. 
2025-10-01 17:22:46.7666|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.js' 
2025-10-01 17:22:46.7666|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /scalar/scalar.aspnetcore.js' 
2025-10-01 17:22:46.7666|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.js - 304 - - 49.1419ms 
2025-10-01 17:22:46.7666|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/scalar/scalar.aspnetcore.js - 304 - - 48.5098ms 
2025-10-01 17:22:46.7666|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 3 with length 30 and flags END_STREAM, END_HEADERS. 
2025-10-01 17:22:46.7666|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 7 with length 5 and flags END_STREAM, END_HEADERS. 
2025-10-01 17:22:46.7666|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 9 with length 58 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:46.7666|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/_vs/browserLink - - - 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 9 with length 119 and flags END_HEADERS. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 9986 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8270|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 10240 and flags NONE. 
2025-10-01 17:22:46.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 1806 and flags NONE. 
2025-10-01 17:22:46.8384|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 9 with length 0 and flags END_STREAM. 
2025-10-01 17:22:46.8384|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/_vs/browserLink - 200 - text/javascript;+charset=UTF-8 73.1576ms 
2025-10-01 17:22:47.6731|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 11 with length 48 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:47.6731|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 17:22:47.6731|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:47.6731|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 17:22:47.6731|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 17:22:47.6731|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:47.6731|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:47.6731|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:47.6731|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:48.1378|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 11 with length 65 and flags END_HEADERS. 
2025-10-01 17:22:48.1378|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 17:22:48.1378|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 17:22:48.1378|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 11 with length 16384 and flags NONE. 
2025-10-01 17:22:48.1378|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 11 with length 9530 and flags NONE. 
2025-10-01 17:22:48.1378|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:48.1378|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" received HEADERS frame for stream ID 13 with length 35 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:48.1378|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/openapi/v1.json - - - 
2025-10-01 17:22:48.1378|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:48.1378|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/openapi/v1.json' 
2025-10-01 17:22:48.1378|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'HTTP: GET /openapi/{documentName}.json' with route pattern '/openapi/{documentName}.json' is valid for the request path '/openapi/v1.json' 
2025-10-01 17:22:48.1378|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:48.1378|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:48.1378|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:48.1378|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:48.1521|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 477.7415ms 
2025-10-01 17:22:48.1521|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 11 with length 0 and flags END_STREAM. 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending HEADERS frame for stream ID 13 with length 4 and flags END_HEADERS. 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 13 with length 16384 and flags NONE. 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 13 with length 9530 and flags NONE. 
2025-10-01 17:22:48.2147|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'HTTP: GET /openapi/{documentName}.json' 
2025-10-01 17:22:48.2147|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" sending DATA frame for stream ID 13 with length 0 and flags END_STREAM. 
2025-10-01 17:22:48.2147|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/openapi/v1.json - 200 - application/json;charset=utf-8 69.6182ms 
2025-10-01 17:22:48.9629|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UNUQPT6F" received FIN. 
2025-10-01 17:22:48.9640|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6F" is closed. The last processed stream ID was 13. 
2025-10-01 17:22:48.9640|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UNUQPT6F" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 17:22:48.9640|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0UNUQPT6F completed. 
2025-10-01 17:22:48.9640|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6F" stopped. 
2025-10-01 17:22:59.3366|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6H" accepted. 
2025-10-01 17:22:59.3366|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UNUQPT6H" started. 
2025-10-01 17:22:59.3482|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UNUQPT6H established using the following protocol: Tls13 
2025-10-01 17:22:59.3482|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:22:59.3482|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:22:59.3482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:22:59.3482|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:22:59.3482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:22:59.3482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:22:59.3482|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UNUQPT6H" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:22:59.3482|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:22:59.3482|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:22:59.3482|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:22:59.3482|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:22:59.3482|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:22:59.3482|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:22:59.3482|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:22:59.3538|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:22:59.4959|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:22:59.4959|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:22:59.4959|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:22:59.5010|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:22:59.5010|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:22:59.5010|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:22:59.5010|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:23:00.1177|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:23:03.4207|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:23:03.4207|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:23:03.4207|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:23:03.4207|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:23:03.4207|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:23:03.4529|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:23:05.4316|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:23:05.4316|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:23:05.4316|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:23:06.1515|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:23:06.4775|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:23:06.7273|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:23:07.0910|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:23:07.0910|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:23:08.1450|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:23:08.2736|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:23:08.3410|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (70ms). 
2025-10-01 17:23:08.3525|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:09.1064|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:09.1064|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:23:09.1327|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (14ms). 
2025-10-01 17:23:09.1327|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (23ms). 
2025-10-01 17:23:09.1684|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:23:09.3914|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (215ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:23:09.5363|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.7160|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.7388|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.8872|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9040|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9778|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9778|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9778|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9778|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9800|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:09.9994|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.0261|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 611ms reading results. 
2025-10-01 17:23:10.0376|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.0600|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (23ms). 
2025-10-01 17:23:10.0600|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:23:10.0600|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:23:10.0746|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:23:10.1089|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:23:10.1089|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.1619|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.1619|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:23:10.1619|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:23:10.1619|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:23:10.1619|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:23:10.1804|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:23:10.2033|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2033|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2446|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2446|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2446|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2446|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2466|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:23:10.2466|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.2466|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 67ms reading results. 
2025-10-01 17:23:10.2466|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:23:10.2466|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 17:29:48.7690|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:29:49.1144|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:29:49.8555|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:29:50.0056|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:29:50.0825|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:29:50.1055|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:29:50.1055|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:29:50.1309|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:29:50.1309|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:29:50.1630|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:29:50.1630|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:29:50.1747|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:29:50.1747|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:29:50.1844|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:29:50.1844|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:29:50.1844|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:29:50.1844|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:29:50.2019|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:29:50.2019|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:29:50.2019|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:29:50.3521|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:29:50.3552|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:29:50.3771|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:29:50.6096|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:29:50.6239|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:29:50.6239|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:29:50.6239|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:29:50.6239|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:29:50.6239|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:29:50.6429|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:29:50.6429|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:29:50.7424|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:29:50.7424|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:29:50.7424|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:29:50.7447|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:29:58.8540|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0URVUFJFI" accepted. 
2025-10-01 17:29:58.8552|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0URVUFJFI" started. 
2025-10-01 17:29:59.0545|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0URVUFJFI established using the following protocol: Tls13 
2025-10-01 17:29:59.1251|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:29:59.1458|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:29:59.1458|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:29:59.1458|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:29:59.1458|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:29:59.1458|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:29:59.1968|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:29:59.2516|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:29:59.2819|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:29:59.4325|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:29:59.4325|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:29:59.4325|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:29:59.4325|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:29:59.6612|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:29:59.6692|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:29:59.7746|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:29:59.7778|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:30:00.2882|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:30:03.1631|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:30:03.1679|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:30:03.1679|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:30:03.1679|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:30:03.1679|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:30:03.1950|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:30:04.9260|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:30:04.9260|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:30:04.9260|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:30:05.6196|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:30:05.9486|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:30:06.1600|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:30:06.4873|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:30:06.4873|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:30:07.5445|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:30:07.6945|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:30:07.7892|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (76ms). 
2025-10-01 17:30:07.8034|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:08.4300|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:08.4391|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:30:08.4619|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (10ms). 
2025-10-01 17:30:08.4675|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (29ms). 
2025-10-01 17:30:08.4920|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:30:08.6880|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (186ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:30:08.8429|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.0412|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.0631|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.1991|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.2190|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3042|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.3246|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.3521|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 639ms reading results. 
2025-10-01 17:30:09.3611|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.3831|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (21ms). 
2025-10-01 17:30:09.3906|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:30:09.3906|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:30:09.3906|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:30:09.4324|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:30:09.4324|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.5306|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.5306|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:30:09.5306|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:30:09.5306|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:30:09.5306|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:30:09.5591|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:30:09.5874|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.5874|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:30:09.6236|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.6236|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 66ms reading results. 
2025-10-01 17:30:09.6236|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:09.6236|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 17:30:10.9360|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 7722.8336ms. 
2025-10-01 17:30:10.9360|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:30:10.9360|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:30:10.9360|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:30:10.9360|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:30:10.9360|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:30:10.9360|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:30:10.9360|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:30:10.9360|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 17:30:10.9647|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 17:30:10.9979|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 17:30:10.9979|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:30:10.9979|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:30:10.9979|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:30:10.9979|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:30:11.0505|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:30:11.0505|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 17:30:11.0505|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 7077 and flags NONE. 
2025-10-01 17:30:11.0596|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:30:11.0596|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:30:11.0596|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:30:11.0884|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 11288.3705ms 
2025-10-01 17:30:11.0884|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:30:11.1031|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0URVUFJFI" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 17:30:11.1121|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 17:30:11.1264|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:30:11.1264|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (5ms). 
2025-10-01 17:30:11.1264|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 72613 application/pdf 11904.9839ms 
2025-10-01 17:31:05.4271|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:31:05.7492|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:31:07.1602|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:31:07.4489|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:31:07.5574|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:31:07.5880|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:31:07.6059|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:31:07.6368|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:31:07.6510|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:31:07.6869|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:31:07.6869|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:31:07.7080|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:31:07.7080|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:31:07.7213|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:31:07.7213|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:31:07.7213|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:31:07.7306|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:31:07.7488|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:31:07.7488|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:31:07.7488|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:31:07.9720|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:31:07.9720|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:31:08.0139|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:31:08.3260|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0USKL0PGL" accepted. 
2025-10-01 17:31:08.3260|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0USKL0PGL" started. 
2025-10-01 17:31:08.3524|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:31:08.3802|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:31:08.3802|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:31:08.3802|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:31:08.3802|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:31:08.3802|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:31:08.3984|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:31:08.4042|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:31:08.5003|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0USKL0PGL established using the following protocol: Tls13 
2025-10-01 17:31:08.5829|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:31:08.5983|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:31:08.5983|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:31:08.5983|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:31:08.5983|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:31:08.5983|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:31:08.5983|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:31:08.5983|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:31:08.5983|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:31:08.6047|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:31:08.6942|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0USKL0PGL" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:31:08.7538|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:31:08.7914|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:31:08.9132|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:31:08.9132|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:31:08.9132|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:31:08.9192|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:31:09.1398|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:31:09.1398|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:31:09.2492|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:31:09.2492|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:31:09.6205|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:31:11.8817|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:31:11.8894|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:31:11.8894|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:31:11.8894|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:31:11.8894|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:31:11.9192|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:31:14.5705|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:31:14.5730|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:31:14.5730|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:31:15.2463|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:31:15.5469|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:31:15.7383|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:31:15.8884|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:31:15.8884|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:31:16.2649|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:31:16.3345|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:31:16.3728|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (28ms). 
2025-10-01 17:31:16.3728|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:17.0671|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:17.0789|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:31:17.1019|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (11ms). 
2025-10-01 17:31:17.1077|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (32ms). 
2025-10-01 17:31:17.1348|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:31:17.3200|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (186ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:31:17.4399|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.6051|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.6051|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.7666|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.7812|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8334|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:17.8504|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:17.8786|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 532ms reading results. 
2025-10-01 17:31:17.8877|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:17.9113|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (23ms). 
2025-10-01 17:31:17.9200|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:31:17.9200|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:31:17.9200|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:31:17.9581|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:31:17.9785|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:18.0298|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:18.0298|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:31:18.0298|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:31:18.0298|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:31:18.0298|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:31:18.0516|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:31:18.0785|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.0785|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:31:18.1225|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:18.1225|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 72ms reading results. 
2025-10-01 17:31:18.1225|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:31:18.1225|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (1ms). 
2025-10-01 17:31:51.9890|0|DEBUG|LibraryManagementSystem.API.Program|init main 
2025-10-01 17:31:53.7722|0|INFO|LibraryManagementSystem.API.Program|âœ… Test log: Application started 
2025-10-01 17:31:56.4653|12|DEBUG|Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory|Registered model binder providers, in the following order: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider 
2025-10-01 17:31:56.8701|1|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting starting 
2025-10-01 17:31:57.0661|63|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2025-10-01 17:31:57.1137|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d.xml'. 
2025-10-01 17:31:57.1980|37|DEBUG|Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository|Reading data from file 'C:\Users\Remah\AppData\Local\ASP.NET\DataProtection-Keys\key-90e9434f-347d-4778-9235-65398a291d04.xml'. 
2025-10-01 17:31:57.2405|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d}. 
2025-10-01 17:31:57.2883|18|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|Found key {90e9434f-347d-4778-9235-65398a291d04}. 
2025-10-01 17:31:57.3199|13|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver|Considering key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} with expiration date 2025-10-28 11:37:33Z as default key. 
2025-10-01 17:31:57.3246|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:31:57.3246|51|DEBUG|Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor|Decrypting secret element using Windows DPAPI. 
2025-10-01 17:31:57.3246|0|DEBUG|Microsoft.AspNetCore.DataProtection.TypeForwardingActivator|Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60 
2025-10-01 17:31:57.3420|4|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'AES' from provider '(null)' with chaining mode CBC. 
2025-10-01 17:31:57.3420|3|DEBUG|Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorFactory|Opening CNG algorithm 'SHA256' from provider '(null)' with HMAC. 
2025-10-01 17:31:57.3420|2|DEBUG|Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider|Using key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} as the default key. 
2025-10-01 17:31:57.3420|65|DEBUG|Microsoft.AspNetCore.DataProtection.Internal.DataProtectionHostedService|Key ring with default key {0eadaaaa-7e78-4b9a-b5c6-d6842d7acf5d} was loaded during application startup. 
2025-10-01 17:31:57.4260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BlazorWasmHotReloadMiddleware|Middleware loaded 
2025-10-01 17:31:57.4260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16539 B). 
2025-10-01 17:31:57.4260|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserScriptMiddleware|Middleware loaded. Script /_framework/blazor-hotreload.js (799 B). 
2025-10-01 17:31:57.8817|7|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True} 
2025-10-01 17:31:57.9003|0|DEBUG|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|Wildcard detected, all requests with hosts will be allowed. 
2025-10-01 17:31:58.0110|0|DEBUG|Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware|Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true 
2025-10-01 17:31:58.7429|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7143 
2025-10-01 17:31:58.8062|14|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5223 
2025-10-01 17:31:58.8159|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly LibraryManagementSystem.API 
2025-10-01 17:31:58.8159|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery 
2025-10-01 17:31:58.8159|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh 
2025-10-01 17:31:58.8159|13|DEBUG|Microsoft.AspNetCore.Hosting.Diagnostics|Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net 
2025-10-01 17:31:58.8347|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:31:58.8347|2|DEBUG|Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider|Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0. 
2025-10-01 17:31:58.9968|0|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2025-10-01 17:31:59.0318|0|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2025-10-01 17:31:59.0489|0|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\Remah\Desktop\AST\Projects\LibraryManagementSys-main\LibraryManagementSystem 
2025-10-01 17:31:59.1272|2|DEBUG|Microsoft.Extensions.Hosting.Internal.Host|Hosting started 
2025-10-01 17:33:13.9032|39|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UTQ2JVLL" accepted. 
2025-10-01 17:33:13.9217|1|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UTQ2JVLL" started. 
2025-10-01 17:33:14.1868|3|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware|Connection 0HNG0UTQ2JVLL established using the following protocol: Tls13 
2025-10-01 17:33:14.2752|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:33:14.2985|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:33:14.2985|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received SETTINGS frame for stream ID 0 with length 24 and flags NONE. 
2025-10-01 17:33:14.2985|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:33:14.2985|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:33:14.2985|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received HEADERS frame for stream ID 1 with length 409 and flags END_STREAM, END_HEADERS, PRIORITY. 
2025-10-01 17:33:14.3613|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received SETTINGS frame for stream ID 0 with length 0 and flags ACK. 
2025-10-01 17:33:14.4263|1|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - - - 
2025-10-01 17:33:14.4662|2|TRACE|Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware|All hosts are allowed. 
2025-10-01 17:33:14.6379|1001|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|1 candidate(s) found for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:33:14.6379|1005|DEBUG|Microsoft.AspNetCore.Routing.Matching.DfaMatcher|Endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' with route pattern 'api/Reports/export-rentals-playwright' is valid for the request path '/api/Reports/export-rentals-playwright' 
2025-10-01 17:33:14.6379|1|DEBUG|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|Request matched endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:33:14.6379|8|TRACE|Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware|The endpoint does not specify the IRequestSizeLimitMetadata. 
2025-10-01 17:33:14.8354|9|DEBUG|Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler|AuthenticationScheme: Bearer was not authenticated. 
2025-10-01 17:33:14.8354|0|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:33:14.9684|102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ExportRentalsPlaywright", controller = "Reports"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExportRentalsPlaywright() on controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API). 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of authorization filters (in the following order): None 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of resource filters (in the following order): None 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of action filters (in the following order): Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000), Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000) 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of exception filters (in the following order): None 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Execution plan of result filters (in the following order): Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000) 
2025-10-01 17:33:14.9684|1|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:33:15.4670|10401|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|An 'IServiceProvider' was created for internal use by Entity Framework. 
2025-10-01 17:33:18.6320|2|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed controller factory for controller LibraryManagementSystem.API.Controllers.ReportsController (LibraryManagementSystem.API) 
2025-10-01 17:33:18.6320|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:33:18.6320|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:33:18.6320|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:33:18.6320|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:33:18.6590|101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executing action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) - Validation state: Valid 
2025-10-01 17:33:20.5190|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'BookId'} was not created on entity type 'BookCategory' as the properties are already covered by the index {'BookId', 'CategoryId'}. 
2025-10-01 17:33:20.5190|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}. 
2025-10-01 17:33:20.5190|10601|DEBUG|Microsoft.EntityFrameworkCore.Model|The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}. 
2025-10-01 17:33:21.1732|30000|WARN|Microsoft.EntityFrameworkCore.Model.Validation|No store type was specified for the decimal property 'Price' on entity type 'Book'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'. 
2025-10-01 17:33:21.4808|10403|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|Entity Framework Core 9.0.8 initialized 'LibraryContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.8' with options: EngineType=SqlServer  
2025-10-01 17:33:21.7496|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<BookRentals>()
    .Include(r => r.Customer)
    .Include(r => r.Book)' 
2025-10-01 17:33:22.0935|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Customer'. 
2025-10-01 17:33:22.0935|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'BookRentals.Book'. 
2025-10-01 17:33:23.0408|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<BookRentals>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: BookRentals.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: BookRentals.BookId (Guid) Required FK Index, 1], [Property: BookRentals.CustomerId (string) Required FK Index, 2], [Property: BookRentals.Price (double) Required, 3], [Property: BookRentals.Quantity (int) Required, 4], [Property: BookRentals.RentEndDate (DateTime) Required, 5], [Property: BookRentals.RentStartDate (DateTime) Required, 6] }
            1 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 7], [Property: User.AccessFailedCount (int) Required, 8], [Property: User.ConcurrencyStamp (string) Concurrency, 9], [Property: User.DateCreated (DateTime) Required, 10], [Property: User.Email (string) MaxLength(256), 11], [Property: User.EmailConfirmed (bool) Required, 12], [Property: User.FirstName (string) Required, 13], [Property: User.LastName (string) Required, 14], [Property: User.LockoutEnabled (bool) Required, 15], [Property: User.LockoutEnd (DateTimeOffset?), 16], [Property: User.NormalizedEmail (string) Index MaxLength(256), 17], [Property: User.NormalizedUserName (string) Index MaxLength(256), 18], [Property: User.PasswordHash (string), 19], [Property: User.PhoneNumber (string), 20], [Property: User.PhoneNumberConfirmed (bool) Required, 21], [Property: User.SecurityStamp (string), 22], [Property: User.TwoFactorEnabled (bool) Required, 23], [Property: User.UserName (string) MaxLength(256), 24] }
            2 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Book.CreatedAt (DateTime) Required, 26], [Property: Book.Description (string), 27], [Property: Book.LastModifiedAt (DateTime?), 28], [Property: Book.LastModifiedBy (DateTime?), 29], [Property: Book.Price (decimal?), 30], [Property: Book.PublisherId (Guid?) FK Index, 31], [Property: Book.Quantity (int) Required, 32], [Property: Book.Title (string), 33] }
        SELECT b.Id, b.BookId, b.CustomerId, b.Price, b.Quantity, b.RentEndDate, b.RentStartDate, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, b0.Id, b0.CreatedAt, b0.Description, b0.LastModifiedAt, b0.LastModifiedBy, b0.Price, b0.PublisherId, b0.Quantity, b0.Title
        FROM BookRentals AS b
        INNER JOIN AspNetUsers AS a ON b.CustomerId == a.Id
        INNER JOIN Books AS b0 ON b.BookId == b0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        BookRentals entity;
        User entity;
        Book entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            BookRentals instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(BookRentals);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: BookRentals.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (BookRentals)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]: 
                        {
                            return 
                            {
                                BookRentals instance;
                                instance = new BookRentals();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(2);
                                instance.<Price>k__BackingField = dataReader.GetDouble(3);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(4);
                                instance.<RentEndDate>k__BackingField = dataReader.GetDateTime(5);
                                instance.<RentStartDate>k__BackingField = dataReader.GetDateTime(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: BookRentals | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(BookRentals)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            User instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(User);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (User)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(12);
                                instance.<FirstName>k__BackingField = dataReader.GetString(13);
                                instance.<LastName>k__BackingField = dataReader.GetString(14);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(16) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(16);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(19) ? default(string) : dataReader.GetString(19);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(21);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(23);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(24) ? default(string) : dataReader.GetString(24);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            Book instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(Book);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(25) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (Book)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(25);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : dataReader.GetString(27);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(28);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(29) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(29);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(30) ? default(decimal?) : (decimal?)dataReader.GetDecimal(30);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(31) ? default(Guid?) : (Guid?)dataReader.GetGuid(31);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(32);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Customer (User) ToPrincipal User Inverse: BookRentals | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Customer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Customer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Customer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<BookRentals, BookRentals, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: BookRentals.Book (Book) ToPrincipal Book Inverse: BookRentals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.BookRentals").FindNavigation("Book")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Book.BookRentals (ICollection<BookRentals>) Collection ToDependent BookRentals Inverse: Book | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<Book>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<Book, ICollection<BookRentals>, BookRentals> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindNavigation("BookRentals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:33:23.1650|20005|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Creating DbConnection. 
2025-10-01 17:33:23.2589|20006|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Created DbConnection. (71ms). 
2025-10-01 17:33:23.2755|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:24.0221|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:24.0341|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:33:24.0662|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (14ms). 
2025-10-01 17:33:24.0743|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (40ms). 
2025-10-01 17:33:24.0994|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:33:24.2867|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (177ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b].[Id], [b].[BookId], [b].[CustomerId], [b].[Price], [b].[Quantity], [b].[RentEndDate], [b].[RentStartDate], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b0].[Id], [b0].[CreatedAt], [b0].[Description], [b0].[LastModifiedAt], [b0].[LastModifiedBy], [b0].[Price], [b0].[PublisherId], [b0].[Quantity], [b0].[Title]
FROM [BookRentals] AS [b]
INNER JOIN [AspNetUsers] AS [a] ON [b].[CustomerId] = [a].[Id]
INNER JOIN [Books] AS [b0] ON [b].[BookId] = [b0].[Id] 
2025-10-01 17:33:24.4417|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.6249|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.6439|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.7989|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8291|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'BookRentals' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'BookRentals.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.8878|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:24.9034|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:24.9254|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 618ms reading results. 
2025-10-01 17:33:24.9337|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:24.9537|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (20ms). 
2025-10-01 17:33:24.9537|10111|DEBUG|Microsoft.EntityFrameworkCore.Query|Compiling query expression: 
'DbSet<ReturnedRental>()
    .Include(r => r.Book)
    .Include(r => r.Customer)' 
2025-10-01 17:33:24.9537|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Book'. 
2025-10-01 17:33:24.9537|10112|DEBUG|Microsoft.EntityFrameworkCore.Query|Including navigation: 'ReturnedRental.Customer'. 
2025-10-01 17:33:25.0109|10107|DEBUG|Microsoft.EntityFrameworkCore.Query|Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ReturnedRental>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: ReturnedRental.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: ReturnedRental.BookId (Guid) Required FK Index, 1], [Property: ReturnedRental.BookTitle (string) Required, 2], [Property: ReturnedRental.CustomerId (string) Required FK Index, 3], [Property: ReturnedRental.CustomerName (string) Required, 4], [Property: ReturnedRental.Price (double) Required, 5], [Property: ReturnedRental.Quantity (int) Required, 6], [Property: ReturnedRental.RentedAt (DateTime) Required, 7], [Property: ReturnedRental.ReturnedAt (DateTime) Required, 8] }
            1 -> Dictionary<IProperty, int> { [Property: Book.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 9], [Property: Book.CreatedAt (DateTime) Required, 10], [Property: Book.Description (string), 11], [Property: Book.LastModifiedAt (DateTime?), 12], [Property: Book.LastModifiedBy (DateTime?), 13], [Property: Book.Price (decimal?), 14], [Property: Book.PublisherId (Guid?) FK Index, 15], [Property: Book.Quantity (int) Required, 16], [Property: Book.Title (string), 17] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (string) Required PK AfterSave:Throw, 18], [Property: User.AccessFailedCount (int) Required, 19], [Property: User.ConcurrencyStamp (string) Concurrency, 20], [Property: User.DateCreated (DateTime) Required, 21], [Property: User.Email (string) MaxLength(256), 22], [Property: User.EmailConfirmed (bool) Required, 23], [Property: User.FirstName (string) Required, 24], [Property: User.LastName (string) Required, 25], [Property: User.LockoutEnabled (bool) Required, 26], [Property: User.LockoutEnd (DateTimeOffset?), 27], [Property: User.NormalizedEmail (string) Index MaxLength(256), 28], [Property: User.NormalizedUserName (string) Index MaxLength(256), 29], [Property: User.PasswordHash (string), 30], [Property: User.PhoneNumber (string), 31], [Property: User.PhoneNumberConfirmed (bool) Required, 32], [Property: User.SecurityStamp (string), 33], [Property: User.TwoFactorEnabled (bool) Required, 34], [Property: User.UserName (string) MaxLength(256), 35] }
        SELECT r.Id, r.BookId, r.BookTitle, r.CustomerId, r.CustomerName, r.Price, r.Quantity, r.RentedAt, r.ReturnedAt, b.Id, b.CreatedAt, b.Description, b.LastModifiedAt, b.LastModifiedBy, b.Price, b.PublisherId, b.Quantity, b.Title, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.DateCreated, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM ReturnedRentals AS r
        INNER JOIN Books AS b ON r.BookId == b.Id
        INNER JOIN AspNetUsers AS a ON r.CustomerId == a.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ReturnedRental entity;
        Book entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ReturnedRental instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ReturnedRental);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ReturnedRental.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ReturnedRental)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]: 
                        {
                            return 
                            {
                                ReturnedRental instance;
                                instance = new ReturnedRental();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<BookId>k__BackingField = dataReader.GetGuid(1);
                                instance.<BookTitle>k__BackingField = dataReader.GetString(2);
                                instance.<CustomerId>k__BackingField = dataReader.GetString(3);
                                instance.<CustomerName>k__BackingField = dataReader.GetString(4);
                                instance.<Price>k__BackingField = dataReader.GetDouble(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<RentedAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<ReturnedAt>k__BackingField = dataReader.GetDateTime(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ReturnedRental | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(ReturnedRental)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Book instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Book);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Book.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(9) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Book)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]: 
                        {
                            return 
                            {
                                Book instance;
                                instance = new Book();
                                instance.<Id>k__BackingField = dataReader.GetGuid(9);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<LastModifiedAt>k__BackingField = dataReader.IsDBNull(12) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(12);
                                instance.<LastModifiedBy>k__BackingField = dataReader.IsDBNull(13) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(13);
                                instance.<Price>k__BackingField = dataReader.IsDBNull(14) ? default(decimal?) : (decimal?)dataReader.GetDecimal(14);
                                instance.<PublisherId>k__BackingField = dataReader.IsDBNull(15) ? default(Guid?) : (Guid?)dataReader.GetGuid(15);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(16);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Book | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("LibraryManagmentSystem.Entities.Book")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Book)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(18) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetString(18);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(19);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(20) ? default(string) : dataReader.GetString(20);
                                instance.<DateCreated>k__BackingField = dataReader.GetDateTime(21);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                instance.<FirstName>k__BackingField = dataReader.GetString(24);
                                instance.<LastName>k__BackingField = dataReader.GetString(25);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : dataReader.GetString(28);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : dataReader.GetString(29);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : dataReader.GetString(31);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : dataReader.GetString(33);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : dataReader.GetString(35);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Identity.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, Book>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Book (Book) ToPrincipal Book | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Book")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Book>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<ReturnedRental, ReturnedRental, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: ReturnedRental.Customer (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("LibraryManagementSystem.Data.Entities.ReturnedRental").FindNavigation("Customer")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<Customer>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: LibraryManagmentSystem.Data.LibraryContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)' 
2025-10-01 17:33:25.0272|20000|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opening connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:25.0793|20001|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Opened connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:25.0793|20103|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Creating DbCommand for 'ExecuteReader'. 
2025-10-01 17:33:25.0793|20104|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Created DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:33:25.0793|20106|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Initialized DbCommand for 'ExecuteReader' (0ms). 
2025-10-01 17:33:25.0793|20100|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:33:25.1066|20101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[Id], [r].[BookId], [r].[BookTitle], [r].[CustomerId], [r].[CustomerName], [r].[Price], [r].[Quantity], [r].[RentedAt], [r].[ReturnedAt], [b].[Id], [b].[CreatedAt], [b].[Description], [b].[LastModifiedAt], [b].[LastModifiedBy], [b].[Price], [b].[PublisherId], [b].[Quantity], [b].[Title], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[DateCreated], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [ReturnedRentals] AS [r]
INNER JOIN [Books] AS [b] ON [r].[BookId] = [b].[Id]
INNER JOIN [AspNetUsers] AS [a] ON [r].[CustomerId] = [a].[Id] 
2025-10-01 17:33:25.1323|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1323|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Customer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'ReturnedRental' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|10805|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|The navigation 'ReturnedRental.Book' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|10806|DEBUG|Microsoft.EntityFrameworkCore.ChangeTracking|Context 'LibraryContext' started tracking 'Book' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values. 
2025-10-01 17:33:25.1655|20301|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|Closing data reader to 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:25.1655|20300|DEBUG|Microsoft.EntityFrameworkCore.Database.Command|A data reader for 'LibraryDb' on server 'LAPTOP-4LPUPLC4' is being disposed after spending 60ms reading results. 
2025-10-01 17:33:25.1655|20002|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:25.1682|20003|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Closed connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4' (0ms). 
2025-10-01 17:33:26.4505|103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action method LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API), returned result Microsoft.AspNetCore.Mvc.FileContentResult in 7768.9598ms. 
2025-10-01 17:33:26.4505|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:33:26.4505|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter. 
2025-10-01 17:33:26.4505|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: Before executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:33:26.4505|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Action Filter: After executing OnActionExecuted on filter Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter. 
2025-10-01 17:33:26.4505|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:33:26.4505|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuting on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:33:26.4505|5|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Before executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:33:26.4505|2|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|Executing FileContentResult, sending file with download name 'BookRentalsReport.pdf' ... 
2025-10-01 17:33:26.4736|38|DEBUG|Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor|The file result has not been enabled for processing range requests. To enable it, set the EnableRangeProcessing property on the result to 'true'. 
2025-10-01 17:33:26.5046|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending HEADERS frame for stream ID 1 with length 170 and flags END_HEADERS. 
2025-10-01 17:33:26.5046|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:33:26.5046|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:33:26.5046|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:33:26.5046|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 16384 and flags NONE. 
2025-10-01 17:33:26.5670|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0. 
2025-10-01 17:33:26.5670|37|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" received WINDOW_UPDATE frame for stream ID 1 with length 4 and flags 0x0. 
2025-10-01 17:33:26.5791|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 7077 and flags NONE. 
2025-10-01 17:33:26.5791|6|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|After executing action result Microsoft.AspNetCore.Mvc.FileContentResult. 
2025-10-01 17:33:26.5791|52|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: Before executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:33:26.5791|53|TRACE|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Result Filter: After executing OnResultExecuted on filter Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter. 
2025-10-01 17:33:26.6108|105|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API) in 11610.7179ms 
2025-10-01 17:33:26.6108|1|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'LibraryManagementSystem.API.Controllers.ReportsController.ExportRentalsPlaywright (LibraryManagementSystem.API)' 
2025-10-01 17:33:26.6227|49|TRACE|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM. 
2025-10-01 17:33:26.6227|10407|DEBUG|Microsoft.EntityFrameworkCore.Infrastructure|'LibraryContext' disposed. 
2025-10-01 17:33:26.6447|20007|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposing connection to database 'LibraryDb' on server 'LAPTOP-4LPUPLC4'. 
2025-10-01 17:33:26.6447|20008|DEBUG|Microsoft.EntityFrameworkCore.Database.Connection|Disposed connection to database '' on server '' (3ms). 
2025-10-01 17:33:26.6447|2|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7143/api/Reports/export-rentals-playwright - 200 72613 application/pdf 12253.9257ms 
2025-10-01 17:35:40.0571|6|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UTQ2JVLL" received FIN. 
2025-10-01 17:35:40.1028|48|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|Connection id "0HNG0UTQ2JVLL" is closed. The last processed stream ID was 1. 
2025-10-01 17:35:40.1044|7|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets|Connection id "0HNG0UTQ2JVLL" sending FIN because: "The Socket transport's send loop completed gracefully." 
2025-10-01 17:35:40.1044|62|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Http2|The connection queue processing loop for 0HNG0UTQ2JVLL completed. 
2025-10-01 17:35:40.1352|2|DEBUG|Microsoft.AspNetCore.Server.Kestrel.Connections|Connection id "0HNG0UTQ2JVLL" stopped. 
